{"version":3,"sources":["../src/_intro.js","../src/polyfill.js","../src/OculusRiftEffect.js","../src/constants.js","../src/utils.js","../src/camera-controls.js","../src/geometry.js","../src/geometry/ingress.js","../src/geometry/portal-link.js","../src/geometry/resonator-link.js","../src/geometry/field.js","../src/geometry/parametric.js","../src/geometry/particle-portal.js","../src/shaders.js","../src/drawable.js","../src/drawable/model.js","../src/drawable/textured.js","../src/drawable/bicolored.js","../src/drawable/xm.js","../src/drawable/glowramp.js","../src/drawable/link.js","../src/drawable/shield-effect.js","../src/drawable/particle.js","../src/drawable/particle-portal.js","../src/loader/base.js","../src/loader/geometry.js","../src/loader/shader.js","../src/loader/texture.js","../src/entity.js","../src/entity/leveled-xm-item.js","../src/entity/flipcard-xm-item.js","../src/entity/inventory-items.js","../src/entity/artifacts.js","../src/entity/artifact-glows.js","../src/entity/portal-link-system.js","../src/entity/resonator-link-system.js","../src/entity/shield-effect.js","../src/entity/portal.js","../src/entity/particle-portal.js","../src/asset-manager.js","../src/engine.js","../src/_outro.js"],"names":[],"mappings":"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","file":"ingress-model-viewer.js","sourcesContent":["(function(root, undefined) {\n\n  \"use strict\";\n\n  var imv = {};\n","if(!JavaDeserializer || !THREE || !libtga)\n{\n  throw 'Missing dependencies';\n}\n\nvar console = window.console || {\n  log: function(){},\n  warn: function(){},\n  info: function(){}\n};\n\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\n// requestAnimationFrame polyfill by Erik MÃ¶ller. fixes from Paul Irish and Tino Zijdel\n\n// MIT license\n\n(function() {\n    var lastTime = 0;\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n        window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame'] || window[vendors[x]+'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame) {\n        window.requestAnimationFrame = function(callback) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n              timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n    }\n\n    if (!window.cancelAnimationFrame){\n        window.cancelAnimationFrame = function(id) {\n            clearTimeout(id);\n        };\n    }\n}());","/**\n * @author troffmo5 / http://github.com/troffmo5\n *\n * Effect to render the scene in stereo 3d side by side with lens distortion.\n * It is written to be used with the Oculus Rift (http://www.oculusvr.com/) but\n * it works also with other HMD using the same technology\n */\n\n // slight cleanup to pass jshint\n\nTHREE.OculusRiftEffect = function ( renderer, options ) {\n\t// worldFactor indicates how many units is 1 meter\n\tvar worldFactor = (options && options.worldFactor) ? options.worldFactor: 1.0;\n\n\t// Specific HMD parameters\n\tvar HMD = (options && options.HMD) ? options.HMD: {\n\t\t// DK1\n\t\thResolution: 1280,\n\t\tvResolution: 800,\n\t\thScreenSize: 0.14976,\n\t\tvScreenSize: 0.0936,\n\t\tinterpupillaryDistance: 0.064,\n\t\tlensSeparationDistance: 0.064,\n\t\teyeToScreenDistance: 0.041,\n\t\tdistortionK : [1.0, 0.22, 0.24, 0.0],\n\t\tchromaAbParameter: [ 0.996, -0.004, 1.014, 0.0]\n\t\t/*\n\t\t// DK2\n\t\thResolution: 1920,\n\t\tvResolution: 1080,\n\t\thScreenSize: 0.12576,\n\t\tvScreenSize: 0.07074,\n\t\tinterpupillaryDistance: 0.0635,\n\t\tlensSeparationDistance: 0.0635,\n\t\teyeToScreenDistance: 0.041,\n\t\tdistortionK : [1.0, 0.22, 0.24, 0.0],\n\t\tchromaAbParameter: [ 0.996, -0.004, 1.014, 0.0]\n\t\t*/\n\t};\n\tthis.HMD = HMD;\n\n\t// Perspective camera\n\tvar pCamera = new THREE.PerspectiveCamera();\n\tpCamera.matrixAutoUpdate = false;\n\tpCamera.target = new THREE.Vector3();\n\n\t// Orthographic camera\n\tvar oCamera = new THREE.OrthographicCamera( -1, 1, 1, -1, 1, 1000 );\n\toCamera.position.z = 1;\n\n\t// pre-render hooks\n\tthis.preLeftRender = function() {};\n\tthis.preRightRender = function() {};\n\n\trenderer.autoClear = false;\n\tvar emptyColor = new THREE.Color(\"black\");\n\n\t// Render target\n\tvar RTParams = { minFilter: THREE.LinearFilter, magFilter: THREE.NearestFilter, format: THREE.RGBAFormat };\n\tvar renderTarget = new THREE.WebGLRenderTarget( 640, 800, RTParams );\n\tvar RTMaterial = new THREE.ShaderMaterial( {\n\t\tuniforms: {\n\t\t\t\"texid\": { type: \"t\", value: renderTarget },\n\t\t\t\"scale\": { type: \"v2\", value: new THREE.Vector2(1.0,1.0) },\n\t\t\t\"scaleIn\": { type: \"v2\", value: new THREE.Vector2(1.0,1.0) },\n\t\t\t\"lensCenter\": { type: \"v2\", value: new THREE.Vector2(0.0,0.0) },\n\t\t\t\"hmdWarpParam\": { type: \"v4\", value: new THREE.Vector4(1.0,0.0,0.0,0.0) },\n\t\t\t\"chromAbParam\": { type: \"v4\", value: new THREE.Vector4(1.0,0.0,0.0,0.0) }\n\t\t},\n\t\tvertexShader: [\n\t\t\t\"varying vec2 vUv;\",\n\t\t\t\"void main() {\",\n\t\t\t\" vUv = uv;\",\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\t\t\"}\"\n\t\t].join(\"\\n\"),\n\n\t\tfragmentShader: [\n\t\t\t\"uniform vec2 scale;\",\n\t\t\t\"uniform vec2 scaleIn;\",\n\t\t\t\"uniform vec2 lensCenter;\",\n\t\t\t\"uniform vec4 hmdWarpParam;\",\n\t\t\t'uniform vec4 chromAbParam;',\n\t\t\t\"uniform sampler2D texid;\",\n\t\t\t\"varying vec2 vUv;\",\n\t\t\t\"void main()\",\n\t\t\t\"{\",\n\t\t\t\"  vec2 uv = (vUv*2.0)-1.0;\", // range from [0,1] to [-1,1]\n\t\t\t\"  vec2 theta = (uv-lensCenter)*scaleIn;\",\n\t\t\t\"  float rSq = theta.x*theta.x + theta.y*theta.y;\",\n\t\t\t\"  vec2 rvector = theta*(hmdWarpParam.x + hmdWarpParam.y*rSq + hmdWarpParam.z*rSq*rSq + hmdWarpParam.w*rSq*rSq*rSq);\",\n\t\t\t'  vec2 rBlue = rvector * (chromAbParam.z + chromAbParam.w * rSq);',\n\t\t\t\"  vec2 tcBlue = (lensCenter + scale * rBlue);\",\n\t\t\t\"  tcBlue = (tcBlue+1.0)/2.0;\", // range from [-1,1] to [0,1]\n\t\t\t\"  if (any(bvec2(clamp(tcBlue, vec2(0.0,0.0), vec2(1.0,1.0))-tcBlue))) {\",\n\t\t\t\"    gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\",\n\t\t\t\"    return;}\",\n\t\t\t\"  vec2 tcGreen = lensCenter + scale * rvector;\",\n\t\t\t\"  tcGreen = (tcGreen+1.0)/2.0;\", // range from [-1,1] to [0,1]\n\t\t\t\"  vec2 rRed = rvector * (chromAbParam.x + chromAbParam.y * rSq);\",\n\t\t\t\"  vec2 tcRed = lensCenter + scale * rRed;\",\n\t\t\t\"  tcRed = (tcRed+1.0)/2.0;\", // range from [-1,1] to [0,1]\n\t\t\t\"  gl_FragColor = vec4(texture2D(texid, tcRed).r, texture2D(texid, tcGreen).g, texture2D(texid, tcBlue).b, 1);\",\n\t\t\t\"}\"\n\t\t].join(\"\\n\")\n\t} );\n\n\tvar mesh = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), RTMaterial );\n\n\t// Final scene\n\tvar finalScene = new THREE.Scene();\n\tfinalScene.add( oCamera );\n\tfinalScene.add( mesh );\n\n    var left = {}, right = {};\n    var distScale = 1.0;\n\tthis.setHMD = function(v) {\n\t\tHMD = v;\n\t\t// Compute aspect ratio and FOV\n\t\tvar aspect = HMD.hResolution / (2*HMD.vResolution);\n\n\t\t// Fov is normally computed with:\n\t\t//   THREE.Math.radToDeg( 2*Math.atan2(HMD.vScreenSize,2*HMD.eyeToScreenDistance) );\n\t\t// But with lens distortion it is increased (see Oculus SDK Documentation)\n\t\tvar r = -1.0 - (4 * (HMD.hScreenSize/4 - HMD.lensSeparationDistance/2) / HMD.hScreenSize);\n\t\tdistScale = (HMD.distortionK[0] + HMD.distortionK[1] * Math.pow(r,2) + HMD.distortionK[2] * Math.pow(r,4) + HMD.distortionK[3] * Math.pow(r,6));\n\t\tvar fov = THREE.Math.radToDeg(2*Math.atan2(HMD.vScreenSize*distScale, 2*HMD.eyeToScreenDistance));\n\n\t\t// Compute camera projection matrices\n\t\tvar proj = (new THREE.Matrix4()).makePerspective( fov, aspect, 0.3, 10000 );\n\t\tvar h = 4 * (HMD.hScreenSize/4 - HMD.interpupillaryDistance/2) / HMD.hScreenSize;\n\t\tleft.proj = ((new THREE.Matrix4()).makeTranslation( h, 0.0, 0.0 )).multiply(proj);\n\t\tright.proj = ((new THREE.Matrix4()).makeTranslation( -h, 0.0, 0.0 )).multiply(proj);\n\n\t\t// Compute camera transformation matrices\n\t\tleft.tranform = (new THREE.Matrix4()).makeTranslation( -worldFactor * HMD.interpupillaryDistance/2, 0.0, 0.0 );\n\t\tright.tranform = (new THREE.Matrix4()).makeTranslation( worldFactor * HMD.interpupillaryDistance/2, 0.0, 0.0 );\n\n\t\t// Compute Viewport\n\t\tleft.viewport = [0, 0, HMD.hResolution/2, HMD.vResolution];\n\t\tright.viewport = [HMD.hResolution/2, 0, HMD.hResolution/2, HMD.vResolution];\n\n\t\t// Distortion shader parameters\n\t\tvar lensShift = 4 * (HMD.hScreenSize/4 - HMD.lensSeparationDistance/2) / HMD.hScreenSize;\n\t\tleft.lensCenter = new THREE.Vector2(lensShift, 0.0);\n\t\tright.lensCenter = new THREE.Vector2(-lensShift, 0.0);\n\n\t\tRTMaterial.uniforms.hmdWarpParam.value = new THREE.Vector4(HMD.distortionK[0], HMD.distortionK[1], HMD.distortionK[2], HMD.distortionK[3]);\n\t\tRTMaterial.uniforms.chromAbParam.value = new THREE.Vector4(HMD.chromaAbParameter[0], HMD.chromaAbParameter[1], HMD.chromaAbParameter[2], HMD.chromaAbParameter[3]);\n\t\tRTMaterial.uniforms.scaleIn.value = new THREE.Vector2(1.0,1.0/aspect);\n\t\tRTMaterial.uniforms.scale.value = new THREE.Vector2(1.0/distScale, 1.0*aspect/distScale);\n\n\t\t// Create render target\n\t\tif ( renderTarget )\n\t\t{\n\t\t  renderTarget.dispose();\n\t\t}\n\t\trenderTarget = new THREE.WebGLRenderTarget( ( HMD.hResolution * distScale / 2 ) * renderer.devicePixelRatio, ( HMD.vResolution * distScale ) * renderer.devicePixelRatio, RTParams );\n\t\tRTMaterial.uniforms.texid.value = renderTarget;\n\n\t};\n\tthis.getHMD = function() {return HMD;};\n\n\tthis.setHMD(HMD);\n\n\tthis.setSize = function ( width, height ) {\n\t\tleft.viewport = [width/2 - HMD.hResolution/2, height/2 - HMD.vResolution/2, HMD.hResolution/2, HMD.vResolution];\n\t\tright.viewport = [width/2, height/2 - HMD.vResolution/2, HMD.hResolution/2, HMD.vResolution];\n\n\t\trenderer.setSize( width, height );\n\t};\n\n\tthis.render = function ( scene, camera ) {\n\t\tvar cc = renderer.getClearColor().clone();\n\n\t\t// Clear\n\t\trenderer.setClearColor(emptyColor);\n\t\trenderer.clear();\n\t\trenderer.setClearColor(cc);\n\n\t\t// camera parameters\n\t\tif (camera.matrixAutoUpdate)\n\t\t{\n\t\t  camera.updateMatrix();\n\t\t}\n\n\t\t// Render left\n\t\tpCamera.projectionMatrix.copy(left.proj);\n\n\t\tpCamera.matrix.copy(camera.matrix).multiply(left.tranform);\n\t\tpCamera.matrixWorldNeedsUpdate = true;\n\n\t\tthis.preLeftRender(pCamera);\n\n\t\trenderer.setViewport(left.viewport[0], left.viewport[1], left.viewport[2], left.viewport[3]);\n\n\t\tRTMaterial.uniforms.lensCenter.value = left.lensCenter;\n\t\trenderer.render( scene, pCamera, renderTarget, true );\n\n\t\trenderer.render( finalScene, oCamera );\n\n\t\t// Render right\n\t\tpCamera.projectionMatrix.copy(right.proj);\n\n\t\tpCamera.matrix.copy(camera.matrix).multiply(right.tranform);\n\t\tpCamera.matrixWorldNeedsUpdate = true;\n\n\t\tthis.preRightRender(pCamera);\n\n\t\trenderer.setViewport(right.viewport[0], right.viewport[1], right.viewport[2], right.viewport[3]);\n\n\t\tRTMaterial.uniforms.lensCenter.value = right.lensCenter;\n\n\t\trenderer.render( scene, pCamera, renderTarget, true );\n\t\trenderer.render( finalScene, oCamera );\n\n\t};\n\n\tthis.dispose = function() {\n\t\tif ( RTMaterial ) {\n\t\t\tRTMaterial.dispose();\n\t\t}\n\t\tif ( renderTarget ) {\n\t\t\trenderTarget.dispose();\n\t\t}\n\t};\n\n};\n","var constants = {\n  teamColors: {\n    RESISTANCE: new THREE.Vector4(0, 0.7607843137254902, 1, 1.0),\n    ENLIGHTENED: new THREE.Vector4(0.1568627450980392, 0.9568627450980393, 0.1568627450980392, 1.0),\n    NEUTRAL: new THREE.Vector4(0.9764705882352941, 0.9764705882352941, 0.9764705882352941, 1.0),\n    LOKI: new THREE.Vector4(1, 0.1568627450980392, 0.1568627450980392, 1.0)\n  },\n  qualityColors: {\n    EXTREMELY_RARE: new THREE.Vector4(0.9803921568627451, 0.39215686274509803, 0.39215686274509803, 1.0),\n    VERY_RARE: new THREE.Vector4(0.9568627450980393, 0.5215686274509804, 0.9254901960784314, 1.0),\n    MORE_RARE: new THREE.Vector4(0.7647058823529411, 0, 1, 1.0),\n    RARE: new THREE.Vector4(0.6666666666666666, 0.5372549019607843, 0.984313725490196, 1.0),\n    LESS_COMMON: new THREE.Vector4(0.45098039215686275, 0.6588235294117647, 1, 1.0),\n    COMMON: new THREE.Vector4(0.5098039215686274, 0.9529411764705882, 0.7058823529411765, 1.0),\n    VERY_COMMON: new THREE.Vector4(0.6980392156862745, 0.6980392156862745, 0.6980392156862745, 1.0),\n    L1: new THREE.Vector4(0.996078431372549, 0.807843137254902, 0.35294117647058826, 1.0),\n    L2: new THREE.Vector4(1, 0.6509803921568628, 0.18823529411764706, 1.0),\n    L3: new THREE.Vector4(1, 0.45098039215686275, 0.08235294117647059, 1.0),\n    L4: new THREE.Vector4(0.8941176470588236, 0, 0, 1.0),\n    L5: new THREE.Vector4(0.9921568627450981, 0.1607843137254902, 0.5725490196078431, 1.0),\n    L6: new THREE.Vector4(0.9215686274509803, 0.14901960784313725, 0.803921568627451, 1.0),\n    L7: new THREE.Vector4(0.7568627450980392, 0.1411764705882353, 0.8784313725490196, 1.0),\n    L8: new THREE.Vector4(0.5882352941176471, 0.15294117647058825, 0.9568627450980393, 1.0)\n  },\n  anomalyColors: {\n    1: new THREE.Vector4(1.0, 0.5686274509803921, 0.21176470588235294, 1.0),\n    2: new THREE.Vector4(1.0, 0.3215686274509804, 0.9058823529411765, 1.0),\n    3: new THREE.Vector4(0.6196078431372549, 0.35294117647058826, 1.0, 1.0),\n    4: new THREE.Vector4(0.8431372549019608, 0.27058823529411763, 0.27058823529411763, 1.0),\n    5: new THREE.Vector4(1.0, 0.9450980392156862, 0.0, 1.0),\n    6: new THREE.Vector4(0.6509803921568628, 1.0, 0.9019607843137255, 1.0),\n    7: new THREE.Vector4(0.5725490196078431, 0.5803921568627451, 0.592156862745098, 1.0)\n  },\n  artifactColors: {\n    Helios: {\n      RedGlow: new THREE.Vector4(0.92, 0.51, 0.14, 1.0),\n      PurpleGlow: new THREE.Vector4(1.0, 0.87, 0.55, 1.0),\n      TargetGlow: new THREE.Vector4(1.0, 0.72, 0.0, 1.0)\n    },\n    Amar: {\n      TargetGlow: new THREE.Vector4(0.62, 0.22, 0.62, 1.0),\n      RedGlow: new THREE.Vector4(0.79, 0.11, 0.49, 1.0),\n      PurpleGlow: new THREE.Vector4(0.58, 0.17, 1.0, 1.0)\n    },\n    Jarvis: {\n      TargetGlow: new THREE.Vector4(0.62, 0.22, 0.62, 1.0),\n      RedGlow: new THREE.Vector4(0.79, 0.11, 0.49, 1.0),\n      PurpleGlow: new THREE.Vector4(0.58, 0.17, 1.0, 1.0)\n    }\n  },\n  xmColors: {\n    coreGlow: new THREE.Vector4(0.92, 0.7, 0.89, 1.0),\n    coreGlowAlt: new THREE.Vector4(0.6, 0.4, 0.6, 0.8)\n  }\n};\n\nimv.Constants = constants;","var inherits = function(a, b) {\n  function C(){}\n  C.prototype = b.prototype;\n  a.superClass_ = b.prototype;\n  a.prototype = new C();\n  a.prototype.constructor = a;\n};\n\nvar setParams = function(base, opts, deep)\n{\n  for(var i in base)\n  {\n    if(base.hasOwnProperty(i) && opts.hasOwnProperty(i))\n    {\n      if(deep && typeof(base[i]) == 'object' && typeof(opts[i]) == 'object')\n      {\n        base[i] = setParams(base[i], opts[i], deep);\n      }\n      else\n      {\n        base[i] = opts[i];\n      }\n    }\n  }\n  return base;\n};\n\nvar copyInto = function(obj, params)\n{\n  for(var i in params)\n  {\n    if(params.hasOwnProperty(i))\n    {\n      if(typeof(obj[i]) == 'object' && typeof(params[i]) == 'object')\n      {\n        obj[i] = copyInto(obj[i], params[i]);\n      }\n      else\n      {\n        obj[i] = params[i];\n      }\n    }\n  }\n  return obj;\n};\n\nvar cloneUniforms = function(uniforms, exclude)\n{\n  var ret = {};\n  for(var i in uniforms)\n  {\n    if(uniforms.hasOwnProperty(i) && (!exclude || !(i in exclude)))\n    {\n      var u = uniforms[i];\n      if(typeof(u.value) == 'object' && 'clone' in u.value)\n      {\n        ret[i] = { type: u.type, value: u.value.clone() };\n      }\n      else\n      {\n        ret[i] = { type: u.type, value: u.value };\n      }\n    }\n  }\n  return ret;\n};\n\nvar copyUniforms = function(uniforms, exclude)\n{\n  var ret = {};\n  for(var i in uniforms)\n  {\n    if(uniforms.hasOwnProperty(i) && (!exclude || !(i in exclude)))\n    {\n      ret[i] = uniforms[i];\n    }\n  }\n  return ret;\n};\n\nvar asyncForeach = function(arr, callback, complete, delay)\n{\n  delay = delay || 0;\n  var i = 0, n = arr.length;\n  var next = function()\n  {\n    if(i >= n)\n    {\n      complete();\n      return;\n    }\n    callback(arr[i], i);\n    i++;\n    setTimeout(next, delay);\n  };\n  setTimeout(next, 0);\n};\n\nimv.Utilities = imv.Utilities || {};\nimv.Utilities.cloneUniforms = cloneUniforms;\nimv.Utilities.copyUniforms = copyUniforms;\nimv.Utilities.asyncForeach = asyncForeach;\nimv.Utilities.setParams = setParams;\nimv.Utilities.inherits = inherits;","var OrbitControls = (function() {\n\n  var PI_HALF = Math.PI / 2.0;\n  var MIN_LOG_DIST = 5.0;\n\n  var cloneTouch = function(touch)\n  {\n    return {identifier: touch.identifier, x: touch.clientX, y: touch.clientY};\n  };\n\n  var getTouchIndex = function(touches, touch)\n  {\n    for(var i = 0; i < touches.length; i++)\n    {\n      if(touches[i].identifier == touch.identifier)\n      {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  var controls = function(canvas, distance, options)\n  {\n    options = options || {};\n    this.canvas = canvas;\n    this.distance = distance || 2;\n    this.distanceTarget = this.distance;\n    var params = {\n      zoomDamp: 0.5,\n      distanceScale: 0.25,\n      distanceMax: 1000,\n      distanceMin: 1,\n      touchScale: 0.1,\n      wheelScale: 0.01,\n      friction: 0.1,\n      target: new THREE.Vector3(),\n      allowZoom: true\n    };\n    this.options = setParams(params, options);\n    this.mouse = {x: 0, y: 0};\n    this.mouseOnDown = {x: 0, y: 0};\n    this.rotation = {x: 0, y: 0};\n    this.target = {x: Math.PI * 3 / 2, y: Math.PI / 6.0};\n    this.targetOnDown = {x: 0, y: 0};\n    this.overRenderer = false;\n    this.mouseMove = this.onMouseMove.bind(this);\n    this.mouseUp = this.onMouseUp.bind(this);\n    this.mouseOut = this.onMouseOut.bind(this);\n    this.canvas.addEventListener('mousedown', this.onMouseDown.bind(this), false);\n    if(this.options.allowZoom)\n    {\n      this.canvas.addEventListener('mousewheel', this.onMouseWheel.bind(this), false);\n    }\n\n    this.touches = [];\n    this.touchDelta = 0;\n    this.touchMove = this.onTouchMove.bind(this);\n    this.touchEnd = this.onTouchEnd.bind(this);\n    this.touchLeave = this.onTouchLeave.bind(this);\n    this.canvas.addEventListener('touchstart', this.onTouchStart.bind(this), false);\n\n    var _this = this;\n    this.canvas.addEventListener('mouseover', function() { _this.overRenderer = true; }, false);\n    this.canvas.addEventListener('mouseout', function() { _this.overRenderer = false; }, false);\n  };\n\n  controls.prototype.updateTargets = function()\n  {\n    var scale = this.distance < MIN_LOG_DIST ? this.distance : Math.log(this.distance);\n    var zoomDamp = scale / this.options.zoomDamp;\n\n    this.target.x = this.targetOnDown.x + (this.mouse.x - this.mouseOnDown.x) * 0.005 * zoomDamp;\n    this.target.y = this.targetOnDown.y + (this.mouse.y - this.mouseOnDown.y) * 0.005 * zoomDamp;\n\n    this.target.y = this.target.y > PI_HALF ? PI_HALF : this.target.y;\n    this.target.y = this.target.y < - PI_HALF ? - PI_HALF : this.target.y;\n  };\n\n  controls.prototype.onMouseDown = function(ev)\n  {\n    ev.preventDefault();\n    this.canvas.addEventListener('mousemove', this.mouseMove, false);\n    this.canvas.addEventListener('mouseup', this.mouseUp, false);\n    this.canvas.addEventListener('mouseout', this.mouseOut, false);\n\n    this.mouseOnDown.x = -ev.clientX;\n    this.mouseOnDown.y = ev.clientY;\n    this.targetOnDown.x = this.target.x;\n    this.targetOnDown.y = this.target.y;\n\n    this.canvas.style.cursor = 'move';\n  };\n\n  controls.prototype.onMouseMove = function(ev)\n  {\n    this.mouse.x = -ev.clientX;\n    this.mouse.y = ev.clientY;\n    this.updateTargets();\n  };\n\n  controls.prototype.onMouseUp = function(ev)\n  {\n    this.onMouseOut(ev);\n    this.canvas.style.cursor = 'auto';\n  };\n\n  controls.prototype.onMouseOut = function()\n  {\n    this.canvas.removeEventListener('mousemove', this.mouseMove, false);\n    this.canvas.removeEventListener('mouseup', this.mouseUp, false);\n    this.canvas.removeEventListener('mouseout', this.mouseOut, false);\n  };\n\n  controls.prototype.updateCamera = function(camera)\n  {\n    var dx = this.target.x - this.rotation.x,\n      dy = this.target.y - this.rotation.y,\n      dz = this.distanceTarget - this.distance;\n    if(Math.abs(dx) > 0.00001 || Math.abs(dy) > 0.00001 || Math.abs(dz) > 0.00001)\n    {\n      this.rotation.x += dx * this.options.friction;\n      this.rotation.y += dy * this.options.friction;\n      this.distance += dz * this.options.distanceScale;\n\n      camera.position.x = this.distance * Math.sin(this.rotation.x) * Math.cos(this.rotation.y) + this.options.target.x;\n      camera.position.y = this.distance * Math.sin(this.rotation.y) + this.options.target.y;\n      camera.position.z = this.distance * Math.cos(this.rotation.x) * Math.cos(this.rotation.y) + this.options.target.z;\n\n      camera.lookAt(this.options.target);\n      camera.matrixWorldNeedsUpdate = true;\n    }\n  };\n\n  controls.prototype.onMouseWheel = function(ev)\n  {\n    ev.preventDefault();\n    if (this.overRenderer) {\n      this.zoom(ev.wheelDeltaY * this.options.wheelScale * (this.distance < MIN_LOG_DIST ? this.distance : Math.log(this.distance)));\n    }\n    return false;\n  };\n\n  controls.prototype.onTouchStart = function(ev)\n  {\n    ev.preventDefault();\n    if(this.touches.length === 0)\n    {\n      this.canvas.addEventListener('touchmove', this.touchMove, false);\n      this.canvas.addEventListener('touchend', this.touchEnd, false);\n      this.canvas.addEventListener('touchleave', this.touchLeave, false);\n    }\n\n    for(var i = 0; i < ev.changedTouches.length; i++)\n    {\n      this.touches.push(cloneTouch(ev.changedTouches[i]));\n    }\n\n    if(this.touches.length === 1)\n    {\n      this.mouseOnDown.x = -this.touches[0].x;\n      this.mouseOnDown.y = this.touches[0].y;\n\n      this.targetOnDown.x = this.target.x;\n      this.targetOnDown.y = this.target.y;\n    }\n    else if(this.touches.length === 2 && this.options.allowZoom)\n    {\n      var x = Math.abs(this.touches[0].x - this.touches[1].x);\n      var y = Math.abs(this.touches[0].y - this.touches[1].y);\n\n      this.touchDelta = Math.sqrt(x * x + y * y);\n    }\n\n    this.canvas.style.cursor = 'move';\n  };\n\n  controls.prototype.onTouchMove = function(ev) {\n    var changed = ev.changedTouches, l = changed.length;\n    for(var i = 0; i < l; i++)\n    {\n      var idx = getTouchIndex(this.touches, changed[i]);\n      if(idx >= 0)\n      {\n        this.touches.splice(idx, 1, cloneTouch(changed[i]));\n      }\n      else\n      {\n        console.log('could not find event ', changed[i]);\n      }\n    }\n\n    if(this.touches.length === 1)\n    {\n      this.mouse.x = - this.touches[0].x;\n      this.mouse.y = this.touches[0].y;\n      this.updateTargets();\n    }\n    else if(this.touches.length === 2 && this.options.allowZoom)\n    {\n      var x = this.touches[0].x - this.touches[1].x;\n      var y = this.touches[0].y - this.touches[1].y;\n\n      var newDelta = Math.sqrt(x * x + y * y);\n      this.zoom((newDelta - this.touchDelta) * this.options.touchScale);\n      this.touchDelta = newDelta;\n    }\n  };\n\n  controls.prototype.removeTouches = function (ev) {\n    var changed = ev.changedTouches, l = changed.length;\n    for(var i = 0; i < l; i++)\n    {\n      var idx = getTouchIndex(this.touches, changed[i]);\n      if(idx >= 0)\n      {\n        this.touches.splice(idx, 1);\n      }\n    }\n    if(this.touches.length === 0)\n    {\n      this.canvas.removeEventListener('touchmove', this.touchMove, false);\n      this.canvas.removeEventListener('touchend', this.touchEnd, false);\n      this.canvas.removeEventListener('touchleave', this.touchLeave, false);\n    }\n    else if(this.touches.length === 1)\n    {\n      this.mouseOnDown.x = -this.touches[0].x;\n      this.mouseOnDown.y = this.touches[0].y;\n\n      this.targetOnDown.x = this.target.x;\n      this.targetOnDown.y = this.target.y;\n    }\n  };\n\n  controls.prototype.onTouchEnd = function(ev)\n  {\n    this.removeTouches(ev);\n    this.canvas.style.cursor = 'auto';\n  };\n\n  controls.prototype.onTouchLeave = function(ev)\n  {\n    this.removeTouches(ev);\n  };\n\n  //?\n  controls.prototype.onTouchCancel = function(ev)\n  {\n    this.removeTouches(ev);\n  };\n\n  controls.prototype.zoom = function(delta)\n  {\n    this.distanceTarget -= delta;\n    this.distanceTarget = Math.min(this.distanceTarget, this.options.distanceMax);\n    this.distanceTarget = Math.max(this.distanceTarget, this.options.distanceMin);\n  };\n\n  return controls;\n}());\n\nimv.Controls = imv.Controls || {};\nimv.Controls.OrbitControls = OrbitControls;","var Geometry = function(options)\n{\n  this.geometry = new THREE.BufferGeometry();\n  this.transparent = (options && options.transparent) || false;\n  this.attributes = {};\n};\n\nGeometry.prototype.getAttributeNames = function()\n{\n  return Object.keys(this.attributes);\n};\n\nimv.Geometry = imv.Geometry || {};\nimv.Geometry.Geometry = Geometry;","var IngressGeometry = (function(){\n\n  //typed arrays only, plz.\n  var eachSlice = function(array, size, callback)\n  {\n    for(var i = 0; i < Math.floor(array.length / size); i++)\n    {\n      callback(array.subarray(i * size, (i + 1) * size), i);\n    }\n  };\n\n  var parseAttributes = function(buf)\n  {\n    var v = new DataView(buf), c = 0;\n    var n = v.getUint32(c), type, size, len, j, name;\n    c += 4;\n    var attributes = [];\n    for(var i = 0; i < n; i++)\n    {\n      type = v.getUint32(c);\n      if(type != 0x01 && type != 0x10)\n      {\n        console.warn('unknown type ' + type);\n      }\n      c += 4;\n      size = v.getUint32(c);\n      c += 4;\n      len = v.getUint16(c);\n      c += 2;\n      name = '';\n      for(j = 0; j < len; j++)\n      {\n        name += String.fromCharCode(v.getUint8(c+j));\n      }\n      c += len;\n      attributes.push({\n        name: name,\n        type: type,\n        size: size\n      });\n    }\n    return attributes;\n  };\n\n  var loadGeometry = function(geom)\n  {\n    var jd = new JavaDeserializer(geom.buf);\n    var stream = jd.getStream();\n    var blocks = stream.getContents();\n    var attributeData = blocks[3].contents.toArray(), total = 0;\n    var attributes = parseAttributes(attributeData);\n    var nAttributes = attributes.length;\n    var points = blocks[0].contents.toArray();\n    var arrays = [], i, a, type;\n    for(i = 0; i < nAttributes; i++)\n    {\n      a = attributes[i];\n      type = 'v' + a.size;\n      total += a.size;\n      geom.attributes[a.name] = { type: type, values: null };\n    }\n    var len = Math.floor(points.length / total);\n    for(i = 0; i < nAttributes; i++)\n    {\n      arrays.push(new Float32Array(attributes[i].size * len));\n    }\n    var position = new Float32Array(3 * len);\n    eachSlice(points, total, function(slice, index) {\n      var off = 0, i;\n      for(i = 0; i < nAttributes; i++)\n      {\n        var l = attributes[i].size;\n        for(var j = 0; j < l; j++)\n        {\n          arrays[i][index * l + j] = slice[off+j];\n        }\n        off += l;\n      }\n      // this always assumes position comes first and is xyz\n      // unfortunately, three.js makes some assumptions about\n      // there being 'position' and 'index' attributes\n      for(i = 0; i < 3; i++)\n      {\n        position[index + i] = slice[i];\n      }\n    });\n    for(i = 0; i < nAttributes; i++)\n    {\n      a = attributes[i];\n      geom.geometry.addAttribute(a.name, new THREE.BufferAttribute(arrays[i], a.size));\n    }\n    geom.geometry.addAttribute('position', new THREE.BufferAttribute(position, 3));\n    var faces = blocks[1].contents.toArray();\n    var index = new Uint16Array(faces.length);\n    index.set(faces);\n    geom.geometry.addAttribute('index', new THREE.BufferAttribute(index, 1));\n  };\n\n  var ingressgeometry = function(arraybuf, options)\n  {\n    Geometry.call(this, options);\n    this.buf = arraybuf;\n    loadGeometry(this);\n    return this;\n  };\n  inherits(ingressgeometry, Geometry);\n\n  return ingressgeometry;\n}());\n\nimv.Geometries = imv.Geometries || {};\nimv.Geometries.Ingress = IngressGeometry;","var PortalLinkGeometry = (function(){\n\n  // TODO: Parameterize this concept a little better\n  // this has potential to be a really flexible and powerful way of\n  // making, essentially, extruded geometry.\n\n  // 9 sets of 6 points, breaking the link into 8 pieces, each providing 6 faces, something like that?\n  var _len = 9, _size = _len * 6;\n  var c = new Array(_len),\n    d = new Array(_len),\n    e = new Array(_len);\n\n  var clampedSin = function(f)\n  {\n    return Math.sin(Math.PI * Math.max(Math.min(1.0, f), 0) / 2);\n  };\n\n  for(var i = 0; i < _len; i++)\n  {\n    var f = i / 8.0;\n    c[i] = f;\n    e[i] = (3.0 + (-1.5 * Math.pow(clampedSin(2.0 * Math.abs(f - 0.5)), 4)));\n    d[i] = clampedSin(1.0 - 2.0 * Math.abs(f - 0.5));\n  }\n\n  var baseColor = new THREE.Vector4(0.46, 0.18, 0.18, 1.0);\n\n  var baseOffset = new THREE.Vector3();\n\n  var fillChunk = function(vert, pos, tex, col, index, f1, f2, f3, f4, f5, v1, f6, v2)\n  {\n    var off = index * 4;\n    vert[index * 3 + 0] = f1;\n    vert[index * 3 + 1] = f2;\n    vert[index * 3 + 2] = f3;\n    pos[off + 0] = f1;\n    pos[off + 1] = f2;\n    pos[off + 2] = f3;\n    pos[off + 3] = f6;\n    tex[off + 0] = f4;\n    tex[off + 1] = f5;\n    tex[off + 2] = v1.x;\n    tex[off + 3] = v1.z;\n    col[off + 0] = v2.x;\n    col[off + 1] = v2.y;\n    col[off + 2] = v2.z;\n    col[off + 3] = v2.w;\n  };\n\n  var linkgeometry = function(options)\n  {\n    options = options || {};\n    options.transparent = true;\n    Geometry.call(this, options);\n    this.position = new THREE.BufferAttribute(new Float32Array(), 3);\n    this.index = new THREE.BufferAttribute(new Uint16Array(), 1);\n    this.a_position = new THREE.BufferAttribute(new Float32Array(), 4);\n    this.a_texCoord0 = new THREE.BufferAttribute(new Float32Array(), 4);\n    this.a_color = new THREE.BufferAttribute(new Float32Array(), 4);\n    this.geometry.addAttribute('position', this.position);\n    this.geometry.addAttribute('index', this.index);\n    this.geometry.addAttribute('a_position', this.a_position);\n    this.geometry.addAttribute('a_texCoord0', this.a_texCoord0);\n    this.geometry.addAttribute('a_color', this.a_color);\n    this.attributes = {\n      \"a_position\": { type: \"v4\", values: null },\n      \"a_texCoord0\": { type: \"v4\", values: null },\n      \"a_color\": { type: \"v4\", values: null }\n    };\n    this.linkCount = 0;\n  };\n  inherits(linkgeometry, Geometry);\n\n  linkgeometry.prototype.extendBuffer = function(attribute, count)\n  {\n    var buf = new Float32Array(attribute.length + (count * attribute.itemSize));\n    buf.set(attribute.array);\n    attribute.array = buf;\n    return buf;\n  };\n\n  linkgeometry.prototype.addLink = function(start, end, color, distance)\n  {\n    distance = distance || Math.sqrt((end.x - start.x) * (end.x - start.x) + (end.y - start.y) * (end.y - start.y));\n    var f1 = baseOffset.y,\n      f2 = f1 + Math.min(30.0, 0.08 * distance),\n      f3 = start.percent,\n      f4 = end.percent,\n      f5 = (f3 + f4) / 2.0,\n      f6 = 0.01 * distance,\n      f7 = 0.1 + f5 * 0.3;\n    var vec = new THREE.Vector3(end.x, 0, end.y).sub(new THREE.Vector3(start.x, 0, start.y));\n    var up = new THREE.Vector3(0, 1, 0);\n    var right = vec.clone().cross(up).normalize();\n    var pos = this.extendBuffer(this.a_position, _size),\n      tex = this.extendBuffer(this.a_texCoord0, _size),\n      col = this.extendBuffer(this.a_color, _size),\n      vert = this.extendBuffer(this.position, _size);\n    var off = this.linkCount * _size;\n    var step = _len * 2;\n    for(var i = 0; i < _len; i++)\n    {\n      var f8 = c[i],\n        f9 = f3 + f8 * (f4 - f3),\n        f10 = 0.6 + 0.35 * f9,\n        f12 = f8 * f6,\n        f13 = start.x + f8 * vec.x,\n        f14 = start.y + f8 * vec.z,\n        f15 = f1 + d[i] * (f2 - f1),\n        f16 = e[i];\n      var cl = baseColor.clone();\n      cl.lerp(color, 0.25 + f9 * 0.75);\n      cl.w = f10;\n      fillChunk(vert, pos, tex, col, off + (i * 2), f13 + f16 * right.x, f15, f14 + f16 * right.z, 0, f12, up, f7, cl);\n      fillChunk(vert, pos, tex, col, off + (i * 2) + 1, f13 - f16 * right.x, f15, f14 - f16 * right.z, 0.5, f12, up, f7, cl);\n      fillChunk(vert, pos, tex, col, off + step + (i * 2), f13, f15 + f16, f14, 0, f12, right, f7, cl);\n      fillChunk(vert, pos, tex, col, off + step + (i * 2) + 1, f13, f15 - f16, f14, 0.5, f12, right, f7, cl);\n      fillChunk(vert, pos, tex, col, off + 2 * step + (i * 2), f13, f15 - f16, f14, 0.5, f12, right, f7, cl);\n      fillChunk(vert, pos, tex, col, off + 2 * step + (i * 2) + 1, f13, 0, f14, 1.0, f12, right, f7, cl);\n    }\n    var ind = new Uint16Array((this.linkCount + 1) * 144);\n    ind.set(this.index.array);\n    var vOff = this.linkCount * _size;\n    var iOff = this.linkCount * 144;\n    for(i = 0; i < 3; i++)\n    {\n      for(var j = 0; j < _len - 1; j++)\n      {\n        ind[iOff + 0] = vOff + 1;\n        ind[iOff + 1] = vOff + 0;\n        ind[iOff + 2] = vOff + 2;\n        ind[iOff + 3] = vOff + 1;\n        ind[iOff + 4] = vOff + 2;\n        ind[iOff + 5] = vOff + 3;\n        vOff += 2;\n        iOff += 6;\n      }\n      vOff += 2;\n    }\n    this.linkCount++;\n    this.index.array = ind;\n    this.position.needsUpdate = true;\n    this.index.needsUpdate = true;\n    this.a_position.needsUpdate = true;\n    this.a_texCoord0.needsUpdate = true;\n    this.a_color.needsUpdate = true;\n    this.geometry.needsUpdate = true;\n    return this;\n  };\n\n  return linkgeometry;\n}());\n\nimv.Geometries = imv.Geometries || {};\nimv.Geometries.PortalLink = PortalLinkGeometry;","var ResonatorLinkGeometry = (function(){\n\n  // 5 sets of 4 points, breaking the link into 4 pieces, each providing 4 faces\n  var _len = 5, _size = _len * 4;\n  var j = new Array(_len),\n    k = new Array(_len),\n    l = new Array(_len);\n\n  var clampedSin = function(f)\n  {\n    return Math.sin(Math.PI * Math.max(Math.min(1.0, f), 0) / 2);\n  };\n\n  for(var i = 0; i < _len; i++)\n  {\n    var f = i / 4.0;\n    j[i] = f;\n    l[i] = 3.5 * Math.max(1.0 - Math.pow(clampedSin(2.0 * Math.abs(f - 0.5)), 4.0), 0.2);\n    k[i] = clampedSin(1.0 - 2.0 * Math.abs(f - 0.5));\n  }\n\n  var baseColor = new THREE.Vector4(0.78, 0.31, 0.31, 1.0);\n\n  var portalBaseOffset = new THREE.Vector3();\n  var resonatorMidOffset = new THREE.Vector3();\n\n  var fillChunk = function(vert, pos, tex, col, index, f1, f2, f3, f4, f5, v1, f6, v2)\n  {\n    var off = index * 4;\n    vert[index * 3 + 0] = f1;\n    vert[index * 3 + 1] = f2;\n    vert[index * 3 + 2] = f3;\n    pos[off + 0] = f1;\n    pos[off + 1] = f2;\n    pos[off + 2] = f3;\n    pos[off + 3] = f6;\n    tex[off + 0] = f4;\n    tex[off + 1] = f5;\n    tex[off + 2] = v1.x;\n    tex[off + 3] = v1.z;\n    col[off + 0] = v2.x;\n    col[off + 1] = v2.y;\n    col[off + 2] = v2.z;\n    col[off + 3] = v2.w;\n  };\n\n  var linkgeometry = function(options)\n  {\n    options = options || {};\n    options.transparent = true;\n    Geometry.call(this, options);\n    this.position = new THREE.BufferAttribute(new Float32Array(), 3);\n    this.index = new THREE.BufferAttribute(new Uint16Array(), 1);\n    this.a_position = new THREE.BufferAttribute(new Float32Array(), 4);\n    this.a_texCoord0 = new THREE.BufferAttribute(new Float32Array(), 4);\n    this.a_color = new THREE.BufferAttribute(new Float32Array(), 4);\n    this.geometry.addAttribute('position', this.position);\n    this.geometry.addAttribute('index', this.index);\n    this.geometry.addAttribute('a_position', this.a_position);\n    this.geometry.addAttribute('a_texCoord0', this.a_texCoord0);\n    this.geometry.addAttribute('a_color', this.a_color);\n    this.attributes = {\n      \"a_position\": { type: \"v4\", values: null },\n      \"a_texCoord0\": { type: \"v4\", values: null },\n      \"a_color\": { type: \"v4\", values: null }\n    };\n    this.linkCount = 0;\n  };\n  inherits(linkgeometry, Geometry);\n\n  linkgeometry.prototype.extendBuffer = function(attribute, count)\n  {\n    var buf = new Float32Array(attribute.length + (count * attribute.itemSize));\n    buf.set(attribute.array);\n    attribute.array = buf;\n    return buf;\n  };\n\n  linkgeometry.prototype.addLink = function(portal, reso, color)\n  {\n    // f1 = resonator midpoint y value\n    // f2 = portal min y value\n    var dist = Math.sqrt((reso.x - portal.x) * (reso.x - portal.x) + (reso.y - portal.y) * (reso.y - portal.y));\n    var f1 = resonatorMidOffset.y,\n      f2 = portalBaseOffset.y,\n      f3 = reso.percent,\n      f4 = (2 / 30) * dist,\n      f5 = 0.9 + 0.1 * f3,\n      f6 = 0.65 + 0.35 * f3,\n      f7 = 0.75 + 0.25 * f3,\n      f8 = 0.1 + 0.3 * f3;\n    var cl = baseColor.clone();\n    cl.lerp(color, 0.1 + f3 * 0.85);\n    cl.w = f7 * cl.w;\n    var vec = new THREE.Vector3(reso.x, 0, reso.y).sub(new THREE.Vector3(portal.x, 0, portal.y));\n    var up = new THREE.Vector3(0, 1, 0);\n    var right = vec.clone().cross(up).normalize();\n    var pos = this.extendBuffer(this.a_position, _size),\n      tex = this.extendBuffer(this.a_texCoord0, _size),\n      col = this.extendBuffer(this.a_color, _size),\n      vert = this.extendBuffer(this.position, _size);\n    var off = this.linkCount * _size;\n    var step = _len * 2;\n    var f10 = 5.0 * ((portal.x + portal.y) - Math.floor(portal.x + portal.y));\n    for(var i = 0; i < _len; i++)\n    {\n      var f11 = j[i],\n        f12 = portal.x + f11 * vec.x,\n        f13 = portal.y + f11 * vec.z,\n        f14 = f2 + f11 * (f1 - f2) + f5 * k[i],\n        f15 = f6 * l[i],\n        f16 = f11 * f4;\n      fillChunk(vert, pos, tex, col, off + (i * 2) + 0, f12 + f15 * right.x, f14, f13 + f15 * right.z, 0.0, f16 + f10, up, f8, cl);\n      fillChunk(vert, pos, tex, col, off + (i * 2) + 1, f12 - f15 * right.x, f14, f13 - f15 * right.z, 1.0, f16 + f10, up, f8, cl);\n\n      fillChunk(vert, pos, tex, col, off + step + (i * 2) + 0, f12, f14 + f15, f13, 0.0, f16 + f10, right, f8, cl);\n      fillChunk(vert, pos, tex, col, off + step + (i * 2) + 1, f12, f14 - f15, f13, 1.0, f16 + f10, right, f8, cl);\n    }\n    var ind = new Uint16Array((this.linkCount + 1) * 48);\n    ind.set(this.index.array);\n    var vOff = this.linkCount * _size;\n    var iOff = this.linkCount * 48;\n    for(i = 0; i < 2; i++)\n    {\n      for(var i2 = 0; i2 < _len - 1; i2++)\n      {\n        ind[iOff + 0] = vOff + 1;\n        ind[iOff + 1] = vOff + 0;\n        ind[iOff + 2] = vOff + 2;\n        ind[iOff + 3] = vOff + 1;\n        ind[iOff + 4] = vOff + 2;\n        ind[iOff + 5] = vOff + 3;\n        vOff += 2;\n        iOff += 6;\n      }\n      vOff += 2;\n    }\n    this.linkCount++;\n    this.index.array = ind;\n    this.position.needsUpdate = true;\n    this.index.needsUpdate = true;\n    this.a_position.needsUpdate = true;\n    this.a_texCoord0.needsUpdate = true;\n    this.a_color.needsUpdate = true;\n    this.geometry.needsUpdate = true;\n    return this;\n  };\n\n  return linkgeometry;\n}());\n\nimv.Geometries = imv.Geometries || {};\nimv.Geometries.ResonatorLink = ResonatorLinkGeometry;\n","var FieldGeometry = (function(){\n\n  // 5 sets of 4 points, breaking the link into 4 pieces, each providing 4 faces\n  var fillChunk = function(vert, pos, col, index, v1, f1, f2, v2)\n  {\n    var off = index * 4;\n    vert[index * 3 + 0] = v1.x;\n    vert[index * 3 + 1] = 0;\n    vert[index * 3 + 2] = v1.y;\n    pos[off + 0] = v1.x;\n    pos[off + 1] = v1.y;\n    pos[off + 2] = f1;\n    pos[off + 3] = f2;\n    col[off + 0] = v2.x;\n    col[off + 1] = v2.y;\n    col[off + 2] = v2.z;\n    col[off + 3] = v2.w;\n    return index + 1;\n  };\n\n  var fillVectors = function(vert, pos, col, index, v1, f1, v2, f2, v3, f3, v4)\n  {\n    return fillChunk(vert, pos, col, fillChunk(vert, pos, col, fillChunk(vert, pos, col, index, v1, 0, f1, v4), v2, 0, f2, v4), v3, ((v2.x - v1.x) * (v1.y - v3.y) - (v2.y - v1.y) * (v1.x - v3.x)) / v1.distanceTo(v2), f3, v4);\n  };\n\n  var fieldgeometry = function(options)\n  {\n    options = options || {};\n    options.transparent = true;\n    Geometry.call(this, options);\n    this.position = new THREE.BufferAttribute(new Float32Array(), 3);\n    this.index = new THREE.BufferAttribute(new Uint16Array(), 1);\n    this.a_position = new THREE.BufferAttribute(new Float32Array(), 4);\n    this.a_color = new THREE.BufferAttribute(new Float32Array(), 4);\n    this.geometry.addAttribute('position', this.position);\n    this.geometry.addAttribute('index', this.index);\n    this.geometry.addAttribute('a_position', this.a_position);\n    this.geometry.addAttribute('a_color', this.a_color);\n    this.attributes = {\n      \"a_position\": { type: \"v4\", values: null },\n      \"a_color\": { type: \"v4\", values: null }\n    };\n    this.fieldCount = 0;\n    this.lastOffset = 0;\n  };\n  inherits(fieldgeometry, Geometry);\n\n  fieldgeometry.prototype.extendBuffer = function(attribute, count)\n  {\n    var buf = new Float32Array(attribute.length + (count * attribute.itemSize));\n    buf.set(attribute.array);\n    attribute.array = buf;\n    return buf;\n  };\n\n  fieldgeometry.prototype.addField = function(A, B, C, color, duration /* ? */)\n  {\n    duration = 1.0;\n    var f1 = 1.1,\n      f2 = A.percent,\n      f3 = B.percent,\n      f4 = C.percent;\n    var vert = this.extendBuffer(this.position, 9),\n      pos = this.extendBuffer(this.a_position, 9),\n      col = this.extendBuffer(this.a_color, 9);\n    if(duration < 1.0)\n    {\n      var f6 = Math.max(0.0, duration);\n      f1 = 1.1 * f6;\n      var f7 = f6 * f6;\n      f2 *= f7;\n      f3 *= f7;\n      f4 *= f7;\n    }\n    var aVec = new THREE.Vector2(A.x, A.y),\n      bVec = new THREE.Vector2(B.x, B.y),\n      cVec = new THREE.Vector2(C.x, C.y);\n    var center = aVec.clone().add(bVec).add(cVec).multiplyScalar(0.333333333333);\n    var start = this.lastOffset;\n    this.lastOffset = fillVectors(vert, pos, col, this.lastOffset, aVec, f2, bVec, f3, center, f1, color);\n    this.lastOffset = fillVectors(vert, pos, col, this.lastOffset, bVec, f3, cVec, f4, center, f1, color);\n    this.lastOffset = fillVectors(vert, pos, col, this.lastOffset, cVec, f4, aVec, f2, center, f1, color);\n    var ind = new Uint16Array((this.fieldCount + 1) * 9);\n    ind.set(this.index.array);\n    for(var i = 0; i < 9; i++)\n    {\n      ind[start + i] = start + i;\n    }\n    this.index.array = ind;\n    this.index.needsUpdate = true;\n    this.position.needsUpdate = true;\n    this.a_position.needsUpdate = true;\n    this.a_color.needsUpdate = true;\n    this.geometry.needsUpdate = true;\n    this.fieldCount++;\n    return this.fieldCount;\n  };\n\n  return fieldgeometry;\n}());\n\nimv.Geometries = imv.Geometries || {};\nimv.Geometries.Field = FieldGeometry;","var ParametricGeometry = (function(){\n\n  // basic template for our parametric function.\n  // takes u, v;\n  // gives array of proper length (options.paramSize)\n  var linear = function(u, v) {\n    // x, y, z\n    return [u, 0, v];\n  };\n\n  var parametric = function(func, options)\n  {\n    Geometry.call(this, options);\n    func = func || linear;\n    options = options || {};\n    var params = {\n      slices: 1,\n      paramSize: 3\n    };\n    this.options = setParams(params, options);\n    var t = func(0, 0);\n    if(!t.length || t.length != this.options.paramSize)\n    {\n      throw 'Parametric function returned invalid results, must be array of length ' + this.options.paramSize;\n    }\n    this.attributes = {\n      'a_position': { type: 'v' + this.options.paramSize, values: null },\n      'a_texCoord0': { type: 'v2', values: null }\n    };\n    var n = this.options.slices, l = this.options.paramSize;\n    // (n + 1)^2 points to define n x n squares in u,v space\n    var len = (n + 1) * (n + 1);\n    var position = new Float32Array(len * 3);\n    var a_position = new Float32Array(len * l);\n    var a_texCoord0 = new Float32Array(len * 2);\n    // number of square subdivisions is n^2, 3 indices per face, 2 faces per square\n    var faces = new Uint16Array(n * n * 3 * 2);\n    var f = 0;\n    for(var i = 0; i <= n; i++)\n    {\n      for(var j = 0; j <= n; j++)\n      {\n        var u = i / n, v = j / n;\n        var slice = func(u, v);\n        var idx = i * (n + 1) + j;\n        a_texCoord0[idx * 2] = u;\n        a_texCoord0[idx * 2 + 1] = v;\n        for(var k = 0; k < l; k++)\n        {\n          a_position[(idx * l) + k] = slice[k];\n          if(k < 3)\n          {\n            position[(idx * l) + k] = slice[k];\n          }\n        }\n        if(l < 3)\n        {\n          position[(idx * 3) + 2] = 0.0;\n        }\n        if(i < n && j < n)\n        {\n          faces[f++] = idx;\n          faces[f++] = idx + 1;\n          faces[f++] = idx + n + 1;\n          faces[f++] = idx + n + 1;\n          faces[f++] = idx + 1;\n          faces[f++] = idx + n + 2;\n        }\n      }\n    }\n    this.geometry.addAttribute('a_position', new THREE.BufferAttribute(a_position, l));\n    this.geometry.addAttribute('a_texCoord0', new THREE.BufferAttribute(a_texCoord0, 2));\n    this.geometry.addAttribute('position', new THREE.BufferAttribute(position, 3));\n    this.geometry.addAttribute('index', new THREE.BufferAttribute(faces, 1));\n  };\n  inherits(parametric, Geometry);\n\n  return parametric;\n}());\n\nimv.Geometries = imv.Geometries || {};\nimv.Geometries.Parametric = ParametricGeometry;","var ParticlePortalsGeometry = (function(){\n\n  var MAX_SYSTEMS = 40,\n    NUM_PARTICLES = 96,\n    NUM_INDICES_PER_PARTICLE = 4,\n    NUM_INDICES_PER_FACE = 6;\n\n  var U = [0.0, 0.0, 1.0, 1.0];\n  var V = [1.0, 0.0, 1.0, 0.0];\n\n  var extendBuffer = function(attribute, count)\n  {\n    var buf = new Float32Array(attribute.length + (count * attribute.itemSize));\n    buf.set(attribute.array);\n    attribute.array = buf;\n    return buf;\n  };\n\n  var particlePortalsGeometry = function() {\n    Geometry.call(this, {transparent: true});\n    this.count = 0;\n    this.attributes = {\n      'a_position': { type: 'v3', values: null },\n      'a_texCoord0': { type: 'v2', values: null },\n      'a_scale': { type: \"f\", values: null },\n      'a_speed': { type: \"f\", values: null },\n      'a_portalIndex': { type: \"f\", values: null },\n      'a_index': { type: \"f\", values: null}\n    };\n    this.position = new THREE.BufferAttribute(new Float32Array(), 3);\n    this.index = new THREE.BufferAttribute(new Uint16Array(), 1);\n    this.a_position = new THREE.BufferAttribute(new Float32Array(), 3);\n    this.a_texCoord0 = new THREE.BufferAttribute(new Float32Array(), 2);\n    this.a_scale = new THREE.BufferAttribute(new Float32Array(), 1);\n    this.a_speed = new THREE.BufferAttribute(new Float32Array(), 1);\n    this.a_portalIndex = new THREE.BufferAttribute(new Float32Array(), 1);\n    this.a_index = new THREE.BufferAttribute(new Float32Array(), 1);\n    this.seeds = [];\n    for(var i = 0; i < NUM_PARTICLES; i++)\n    {\n      this.seeds.push({\n        x: Math.random() - 0.5,\n        y: 0.4 * Math.random() - 0.2,\n        z: Math.random() - 0.5,\n        a_scale: 10.0 * (0.1 + 0.9 * Math.random()),\n        a_speed: 6.0 * (0.5 + 0.5 * Math.random())\n      });\n    }\n    this.geometry.addAttribute('a_position', this.a_position);\n    this.geometry.addAttribute('a_texCoord0', this.a_texCoord0);\n    this.geometry.addAttribute('a_scale', this.a_scale);\n    this.geometry.addAttribute('a_speed', this.a_speed);\n    this.geometry.addAttribute('a_portalIndex', this.a_portalIndex);\n    this.geometry.addAttribute('a_index', this.a_index);\n    this.geometry.addAttribute('position', this.position);\n    this.geometry.addAttribute('index', this.index);\n  };\n  inherits(particlePortalsGeometry, Geometry);\n\n  particlePortalsGeometry.prototype.addSystem = function() {\n    if(this.count + 1 >= MAX_SYSTEMS)\n    {\n      throw 'This system is full';\n    }\n    var n = NUM_PARTICLES * NUM_INDICES_PER_PARTICLE;\n    var a_position = extendBuffer(this.a_position, n);\n    var a_texCoord0 = extendBuffer(this.a_texCoord0, n);\n    var a_scale = extendBuffer(this.a_scale, n);\n    var a_speed = extendBuffer(this.a_speed, n);\n    var a_portalIndex = extendBuffer(this.a_portalIndex, n);\n    var a_index = extendBuffer(this.a_index, n);\n    var position = extendBuffer(this.position, n);\n    var c = this.count++;\n    var idx = c * n, seed, i, j;\n    for(i = 0; i < NUM_PARTICLES; i++)\n    {\n      seed = this.seeds[i];\n      for(j = 0; j < NUM_INDICES_PER_PARTICLE; j++)\n      {\n        position[idx * 3 + 0] = 0;//seed.x;\n        position[idx * 3 + 1] = 0;//seed.y;\n        position[idx * 3 + 2] = 0;//seed.z;\n        a_position[idx * 3 + 0] = seed.x;\n        a_position[idx * 3 + 1] = seed.y;\n        a_position[idx * 3 + 1] = seed.z;\n        a_texCoord0[idx * 2 + 0] = U[j];\n        a_texCoord0[idx * 2 + 1] = V[j];\n        a_scale[idx] = seed.a_scale;\n        a_speed[idx] = seed.a_speed;\n        a_portalIndex[idx] = c;\n        a_index[idx] = i;\n        idx++;\n      }\n    }\n\n    var index = new Uint16Array((c + 1) * NUM_PARTICLES * NUM_INDICES_PER_FACE);\n    index.set(this.index.array);\n    var indices = [0, 1, 2, 1, 3, 2];\n    idx = c * n;\n    var f = c * NUM_PARTICLES * NUM_INDICES_PER_FACE;\n    for(i = 0; i < NUM_PARTICLES; i++)\n    {\n      for(j = 0; j < NUM_INDICES_PER_FACE; j++)\n      {\n        index[f + j] = idx + indices[j];\n      }\n      f += 6;\n      idx += 4;\n    }\n    this.index.array = index;\n    this.position.needsUpdate = true;\n    this.index.needsUpdate = true;\n    this.a_position.needsUpdate = true;\n    this.a_texCoord0.needsUpdate = true;\n    this.a_scale.needsUpdate = true;\n    this.a_speed.needsUpdate = true;\n    this.a_portalIndex.needsUpdate = true;\n    this.a_index.needsUpdate = true;\n    this.geometry.needsUpdate = true;\n  };\n\n  return particlePortalsGeometry;\n}());\n\nimv.Geometries = imv.Geometries || {};\nimv.Geometries.ParticlePortals = ParticlePortalsGeometry;","var ShaderSet = (function(){\n\n  var types = {\n    'mat4': 'm4',\n    'vec4': 'v4',\n    'vec3': 'v3',\n    'vec2': 'v2',\n    'float': 'f',\n    'sampler2D': 't',\n    'int': 'i'\n  };\n  var getUniforms = function(program)\n  {\n    var uMatch = /uniform ([^ ]+) ([^;]+);/ig;\n    var uniforms = {};\n    var matches;\n    while((matches = uMatch.exec(program)) !== null)\n    {\n      var t = matches[1];\n      if(types.hasOwnProperty(t))\n      {\n        t = types[t];\n      }\n      else\n      {\n        console.warn('no known conversion from ' + t);\n      }\n      uniforms[matches[2]] = { type: t };\n    }\n    return uniforms;\n  };\n\n  var getAttributes = function(program)\n  {\n    var aMatch = /attribute ([^ ]+) ([^;]+);/ig;\n    var attributes = {};\n    var matches;\n    while((matches = aMatch.exec(program)) !== null)\n    {\n      var t = matches[1];\n      if(types.hasOwnProperty(t))\n      {\n        t = types[t];\n      }\n      else\n      {\n        console.warn('no known conversion from ' + t);\n      }\n      attributes[matches[2]] = { type: t };\n    }\n    return attributes;\n  };\n\n  var fixPrecision = function(shader)\n  {\n    if(/precision mediump float/g.test(shader))\n    {\n      return shader;\n    }\n    else\n    {\n      var lines = shader.split(\"\\n\");\n      lines.splice(1, 0, \"#ifdef GL_ES\", \"precision mediump float;\", \"#endif\");\n      return lines.join(\"\\n\");\n    }\n  };\n\n  var shaderset = function(vertex, fragment)\n  {\n    this.vertex = fixPrecision(vertex);\n    this.fragment = fragment;\n    this.uniforms = getUniforms(vertex + \"\\n\" + fragment);\n    this.attributes = getAttributes(vertex + \"\\n\" + fragment);\n  };\n\n  shaderset.prototype.getUniformsList = function()\n  {\n    return Object.keys(this.uniforms);\n  };\n\n  shaderset.prototype.getAttributesList = function()\n  {\n    return Object.keys(this.attributes);\n  };\n\n  return shaderset;\n}());\n\nimv.ShaderSet = ShaderSet;","var Drawable = (function(){\n\n  var drawable = function()\n  {\n    this.geometry = null;\n    this.material = null;\n    this.mesh = null;\n    this.shaders = null;\n    this.elapsed = 0;\n    this.uniforms = {};\n    this.options = {};\n  };\n\n  drawable.prototype.init = function(geometry, shaders)\n  {\n    if(!(geometry instanceof imv.Geometry.Geometry))\n    {\n      throw 'Geometry must inherit from base';\n    }\n    if(!(shaders instanceof imv.ShaderSet))\n    {\n      throw 'Shaders must inherit from base';\n    }\n    var params = {\n      transparent: false\n    };\n    this.options = setParams(params, this.options);\n    this.geometry = geometry;\n    this.shaders = shaders;\n\n    var materialParams = {\n      uniforms: this.uniforms,\n      attributes: geometry.attributes,\n      vertexShader: shaders.vertex,\n      fragmentShader: shaders.fragment,\n      transparent: this.options.transparent,\n      side: THREE.DoubleSide,\n      depthWrite: !this.options.transparent\n    };\n    this.material = new THREE.RawShaderMaterial(materialParams);\n\n    this.mesh = new THREE.Mesh(geometry.geometry, this.material);\n    this.mesh.frustumCulled = false;\n    this.mesh.updateMatrix();\n    this.mesh.matrixAutoUpdate = false;\n    this.id = null;\n\n    return this;\n  };\n\n  drawable.prototype.updateView = function() {\n    // this most basic is usually a u_modelViewProject update:\n    console.warn('Nothing to udpate');\n  };\n\n  drawable.prototype.updateTime = function(time) {\n    this.elapsed += time;\n  };\n\n  drawable.prototype.updateUniformF = function(name, value) {\n    this.uniforms[name].value = value;\n  };\n\n  drawable.prototype.updateUniformV = function(name, value) {\n    this.uniforms[name].value.copy(value);\n  };\n\n  drawable.prototype.updateUniformM = function(name, value) {\n    this.uniforms[name].value.copy(value);\n  };\n\n  return drawable;\n}());\n\nimv.Drawable = Drawable;","var ModelDrawable = (function() {\n\n  var modelDrawable = function() {\n    Drawable.call(this);\n    this.uniforms.u_modelViewProject = {\n      type: \"m4\",\n      value: new THREE.Matrix4()\n    };\n    this.projectView = new THREE.Matrix4();\n  };\n  inherits(modelDrawable, Drawable);\n\n  modelDrawable.prototype.updateView = function(camera) {\n    // this most basic is usually a u_modelViewProject update:\n    this.projectView.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n    this.updateModel();\n  };\n\n  // signals that the model's mesh has been updated in some way...\n  // means we need to recalculate the u_modelViewProject uniform\n  modelDrawable.prototype.updateModel = function() {\n    this.mesh.updateMatrix();\n    this.mesh.updateMatrixWorld();\n    var modelViewProject = this.projectView.clone().multiply(this.mesh.matrixWorld);\n    this.updateUniformM('u_modelViewProject', modelViewProject);\n  };\n\n  return modelDrawable;\n}());\n\nimv.Drawables = imv.Drawables || {};\nimv.Drawables.Model = ModelDrawable;","var TexturedDrawable = (function(){\n\n  var texturedDrawable = function(texture) {\n    ModelDrawable.call(this);\n    if(!(texture instanceof THREE.Texture))\n    {\n      throw 'Texture must be a THREE.Texture';\n    }\n    this.uniforms.u_texture = {\n      type: \"t\",\n      value: texture\n    };\n    texture.needsUpdate = true; // not sure I need this here now.\n  };\n  inherits(texturedDrawable, ModelDrawable);\n\n  return texturedDrawable;\n}());\n\nimv.Drawables = imv.Drawables || {};\nimv.Drawables.Textured = TexturedDrawable;","var BicoloredDrawable = (function(){\n\n  // default quality color: very rare\n  var defaultColor0 = new THREE.Vector4().copy(constants.qualityColors.VERY_RARE);\n\n  // default glow color: xm color\n  var defaultColor1 = new THREE.Vector4().copy(constants.xmColors.coreGlow);\n\n  var bicolorDrawable = function(texture, u_color0, u_color1) {\n    TexturedDrawable.call(this, texture);\n    this.uniforms.u_color0 = {\n      type: \"v4\",\n      value: u_color0 || (defaultColor0.clone())\n    };\n    this.uniforms.u_color1 = {\n      type: \"v4\",\n      value: u_color1 || (defaultColor1.clone())\n    };\n  };\n  inherits(bicolorDrawable, TexturedDrawable);\n\n  bicolorDrawable.prototype.setPrimaryColor = function(color)\n  {\n    this.updateUniformV('u_color0', color);\n  };\n\n  bicolorDrawable.prototype.setSecondaryColor = function(color)\n  {\n    this.updateUniformV('u_color1', color);\n  };\n\n  return bicolorDrawable;\n}());\n\nimv.Drawables = imv.Drawables || {};\nimv.Drawables.Bicolored = BicoloredDrawable;","var XmDrawable = (function(){\n\n  var defaultTeamColor = new THREE.Vector4().copy(constants.xmColors.coreGlow);\n  var defaultAltColor = new THREE.Vector4().copy(constants.xmColors.coreGlowAlt);\n\n  var xmDrawable = function(texture, teamColor, altColor, elapsed) {\n    TexturedDrawable.call(this, texture);\n    this.uniforms.u_elapsedTime = {\n      type: \"f\",\n      value: elapsed || 0\n    };\n    this.uniforms.u_teamColor = {\n      type: \"v4\",\n      value: teamColor || defaultTeamColor.clone()\n    };\n    this.uniforms.u_altColor = {\n      type: \"v4\",\n      value: altColor || defaultAltColor.clone()\n    };\n  };\n  inherits(xmDrawable, TexturedDrawable);\n\n  xmDrawable.prototype.setTeamColor = function(color) {\n    this.updateUniformV('u_teamColor', color);\n  };\n\n  xmDrawable.prototype.setAltColor = function(color) {\n    this.updateUniformV('u_altColor', color);\n  };\n\n  xmDrawable.prototype.updateTime = function(tick) {\n    Drawable.prototype.updateTime.call(this, tick);\n    this.updateUniformF('u_elapsedTime', ((this.elapsed / 1000) % 300.0) * 0.1);\n  };\n\n  return xmDrawable;\n}());\n\nimv.Drawables = imv.Drawables || {};\nimv.Drawables.Xm = XmDrawable;","var GlowrampDrawable = (function(){\n\n  // default base color: neutral portal color\n  var defaultBaseColor = new THREE.Vector4().copy(imv.Constants.teamColors.NEUTRAL);\n\n  var glowrampDrawable = function(texture, baseColor, rotation, rampTarget, alpha) {\n    TexturedDrawable.call(this, texture);\n    this.uniforms.u_baseColor = {\n      type: \"v4\",\n      value: baseColor || defaultBaseColor.clone()\n    };\n    this.uniforms.u_rotation = {\n      type: \"f\",\n      value: rotation || 0\n    };\n    this.uniforms.u_rampTarget = {\n      type: \"f\",\n      value: rampTarget || 0\n    };\n    this.uniforms.u_alpha = {\n      type: \"f\",\n      value: alpha || 0.6\n    };\n    this.options.transparent = true;\n  };\n  inherits(glowrampDrawable, TexturedDrawable);\n\n  glowrampDrawable.prototype.setBaseColor = function(color) {\n    this.updateUniformV('u_baseColor', color);\n  };\n\n  glowrampDrawable.prototype.setAlpha = function(alpha) {\n    this.updateuniformF('u_alpha', alpha);\n  };\n\n  glowrampDrawable.prototype.updateTime = function(tick) {\n    Drawable.prototype.updateTime.call(this, tick);\n    var inc = this.elapsed / 5000;\n    this.updateUniformF('u_rotation', inc);\n    this.updateUniformF('u_rampTarget', Math.sin(Math.PI / 2 * (inc - Math.floor(inc))));\n    this.updateUniformF('u_alpha', Math.sin(inc) * 0.05 + 0.75);\n  };\n\n  return glowrampDrawable;\n}());\n\nimv.Drawables = imv.Drawables || {};\nimv.Drawables.Glowramp = GlowrampDrawable;","var LinkDrawable = (function(){\n\n  // no defaults here.\n\n  var linkDrawable = function(texture) {\n    TexturedDrawable.call(this, texture);\n    this.uniforms.u_cameraFwd = {\n      type: \"v3\",\n      value: new THREE.Vector3(0, 0, -1)\n    };\n    this.uniforms.u_elapsedTime = {\n      type: \"f\",\n      value: 0\n    };\n    this.options.transparent = true;\n  };\n  inherits(linkDrawable, TexturedDrawable);\n\n  linkDrawable.prototype.updateView = function(camera) {\n    var fwd = new THREE.Vector3(0, 0, -1).applyQuaternion(camera.quaternion);\n    this.updateUniformV('u_cameraFwd', fwd);\n    ModelDrawable.prototype.updateView.call(this, camera);\n  };\n\n  linkDrawable.prototype.updateTime = function(tick) {\n    Drawable.prototype.updateTime.call(this, tick);\n    this.updateUniformF('u_elapsedTime', ((this.elapsed / 1000) % 300.0) * 0.1);\n  };\n\n  return linkDrawable;\n}());\n\nimv.Drawables = imv.Drawables || {};\nimv.Drawables.Link = LinkDrawable;","var ShieldEffectDrawable = (function(){\n\n  // these defaults are whack.  Need to find the real\n  // functions used to update these, too\n  // As of 1.62.0, that was in ...ingress.common.scanner.b.a.d\n  // The baksmali is a little jacked up, though.\n  var defaultColor = new THREE.Vector4().copy(imv.Constants.teamColors.NEUTRAL),\n    defaultRampTargetInv = new THREE.Vector2(0.5, 1.3),\n    defaultContributions = new THREE.Vector3(0.5, 0.5, 0.5);\n\n  var shieldEffectDrawable = function(texture, color, rampTargetInvWidth, contributions) {\n    TexturedDrawable.call(this, texture);\n    this.uniforms.u_color = {\n      type: \"v4\",\n      value: color || defaultColor\n    };\n    this.uniforms.u_rampTargetInvWidth = {\n      type: \"v2\",\n      value: rampTargetInvWidth || defaultRampTargetInv.clone()\n    };\n    this.uniforms.u_contributionsAndAlpha = {\n      type: \"v3\",\n      value: contributions || defaultContributions.clone()\n    };\n    this.options.transparent = true;\n  };\n  inherits(shieldEffectDrawable, TexturedDrawable);\n\n  shieldEffectDrawable.prototype.setColor = function(color) {\n    this.updateUniformV('u_color', color);\n  };\n\n  shieldEffectDrawable.prototype.updateTime = function(tick) {\n    Drawable.prototype.updateTime.call(this, tick);\n    var inc = this.elapsed / 10000;\n    var v = this.uniforms.u_rampTargetInvWidth.value.clone();\n    v.x = (inc - Math.floor(inc)) * 2.0 - 0.5;\n    this.updateUniformV('u_rampTargetInvWidth', v);\n  };\n\n  return shieldEffectDrawable;\n}());\n\nimv.Drawables = imv.Drawables || {};\nimv.Drawables.ShieldEffect = ShieldEffectDrawable;","var ParticleDrawable = (function(){\n\n  var particleDrawable = function(texture) {\n    TexturedDrawable.call(this, texture);\n    this.uniforms.u_cameraPos = {\n      type: \"v3\",\n      value: new THREE.Vector3()\n    };\n    this.options.transparent = true;\n  };\n  inherits(particleDrawable, TexturedDrawable);\n\n  particleDrawable.prototype.updateView = function(camera) {\n    this.projectView.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n    this.updateUniformV('u_cameraPos', camera.position);\n    this.updateUniformM('u_modelViewProject', this.projectView);\n    /*var camVec = this.mesh.position.clone().sub(camera.position);\n    camVec.y = 0;\n    camVec.normalize();\n    var angle = Math.atan2(camVec.z, camVec.x);\n    var quat = new THREE.Quaternion();\n    quat.setFromAxisAngle(new THREE.Vector3(0, 1, 0), angle);\n    this.mesh.quaternion.copy(quat);\n    this.updateModel();*/\n    //ModelDrawable.prototype.updateView.call(this, camera);\n  };\n\n  /*particleDrawable.prototype.updateModel = function() {\n    // do nothing, since we don't want to use the model's internal matrix\n  };*/\n\n  return particleDrawable;\n}());\n\nimv.Drawables = imv.Drawables || {};\nimv.Drawables.Particle = ParticleDrawable;"," var ParticlePortalsDrawable = (function(){\n\n  var MAX_SYSTEMS = 40;\n\n  var system = function(color, position, count, height, distance, spread, id)\n  {\n    this.color = color;\n    this.position = position;\n    this.count = count;\n    this.height = height;\n    this.distance = distance;\n    this.spread = spread;\n    this.id = id;\n  };\n\n  var particlePortalsDrawable = function(texture) {\n    ParticleDrawable.call(this, texture);\n    this.colors = [];\n    this.position = [];\n    this.params = [];\n    this.count = 0;\n    this.id = 0;\n    this.systems = [];\n    for(var i = 0; i < MAX_SYSTEMS; i++)\n    {\n      this.colors.push(new THREE.Vector4());\n      this.position.push(new THREE.Vector4());\n      this.params.push(new THREE.Vector4());\n    }\n    this.uniforms.u_color = {\n      type: \"v4v\",\n      value: this.colors\n    };\n    this.uniforms.u_position = {\n      type: \"v4v\",\n      value: this.position\n    };\n    this.uniforms.u_params = {\n      type: \"v4v\",\n      value: this.params\n    };\n  };\n  inherits(particlePortalsDrawable, ParticleDrawable);\n\n  particlePortalsDrawable.prototype.updateView = function(camera) {\n    ParticleDrawable.prototype.updateView.call(this, camera);\n    var n = this.count, delta = new THREE.Vector3(), cur, scale;\n    for(var i = 0; i < n; i++)\n    {\n      cur = this.systems[i];\n      delta.copy(cur.position).sub(camera.position);\n      scale = Math.pow(delta.length(), 0.2);\n      this.position[i].set(cur.position.x, cur.position.y, cur.position.z, cur.height);\n      this.params[i].w = scale;\n    }\n  };\n\n  particlePortalsDrawable.prototype.addSystem = function(color, position, count,\n    height, spread, distance)\n  {\n    if(this.count + 1 >= MAX_SYSTEMS)\n    {\n      throw 'This system is full';\n    }\n    // position should be relative to the system's position\n    position.sub(this.mesh.position);\n    var n = this.count++;\n    var pos = this.uniforms.u_cameraPos.value;\n    var delta = position.clone().sub(pos);\n    var scale = Math.pow(delta.length(), 0.2);\n    var id = this.id++;\n    this.systems.push(new system(color, position, count, height, spread, distance, id));\n    this.colors[n].set(color.x, color.y, color.z, count);\n    this.position[n].set(position.x, position.y, position.z, height);\n    this.params[n].set(this.elapsed / 100000 * distance, distance, spread, scale);\n    return id;\n  };\n\n  particlePortalsDrawable.prototype.updateTime = function(tick) {\n    Drawable.prototype.updateTime.call(this, tick);\n    var n = this.count;\n    for(var i = 0; i < n; i++)\n    {\n      this.params[i].x = (this.elapsed / 100000) * this.params[i].y;\n    }\n  };\n\n  return particlePortalsDrawable;\n}());\n\nimv.Drawables = imv.Drawables || {};\nimv.Drawables.ParticlePortals = ParticlePortalsDrawable;","var loadResource = function(url, type, callback)\n{\n  if(type === 'image' || type === 'image.co')\n  {\n    if(/\\.tga$/.test(url))\n    {\n      libtga.loadFile(url, function(err, tga) {\n        if(err)\n        {\n          callback(err, null);\n          return;\n        }\n        var canvas = document.createElement('canvas');\n        var context = canvas.getContext('2d');\n        var imageData = context.createImageData(tga.width, tga.height);\n        imageData.data.set(tga.imageData);\n        canvas.height = tga.height;\n        canvas.width = tga.width;\n        context.putImageData(imageData, 0, 0);\n        callback(null, canvas);\n      });\n    }\n    else\n    {\n      var i = new Image();\n      // cross-origin image:\n      if(type === 'image.co')\n      {\n        i.crossOrigin = 'anoymous';\n      }\n      i.onload = function()\n      {\n        callback(null, this);\n      };\n      i.onerror = function(e)\n      {\n        callback(e, null);\n      };\n      i.src = url;\n    }\n  }\n  else\n  {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url);\n    xhr.responseType = type;\n    xhr.onload = function() {\n      callback(null, this.response);\n    };\n    xhr.onerror = function(e) {\n      callback(e, null);\n    };\n\n    xhr.send();\n  }\n};\n\nvar AssetLoader = function(type, transform)\n{\n  type = type || 'text';\n  transform = transform || function(v) { return v; };\n  var _callbacks = {};\n  var _assets = {};\n\n  this.loadAsset = function(name, url, callback, options)\n  {\n    if(_assets[name])\n    {\n      callback(null, _assets[name]);\n      return;\n    }\n    _callbacks[name] = _callbacks[name] || [];\n    _callbacks[name].push(callback);\n    if(!_assets.hasOwnProperty(name))\n    {\n      _assets[name] = false;\n      loadResource(url, type, function(err, value) {\n        if(!err)\n        {\n          value = transform(value, options);\n          _assets[name] = value;\n        }\n        var cb;\n        while((cb = _callbacks[name].shift()))\n        {\n          cb(err, value);\n        }\n      });\n    }\n  };\n\n  this.getAsset = function(name)\n  {\n    return _assets[name];\n  };\n};\n\nimv.AssetLoader = AssetLoader;\nimv.Utilities = imv.Utilities || {};\nimv.Utilities.loadResource = loadResource;","var GeometryLoader = function(basepath, type)\n{\n  this.base = basepath;\n  type = type || Geometry;\n  this.geometries = new AssetLoader('arraybuffer', function(v, opt) { return new (type)(v, opt);});\n};\n\nGeometryLoader.prototype.loadAsset = function(name, asset, callback)\n{\n  this.geometries.loadAsset(name, this.base+asset.path, callback, asset);\n};\n\nGeometryLoader.prototype.getAsset = function(name)\n{\n  return this.geometries.getAsset(name);\n};\n\nimv.Loaders = imv.Loaders || {};\nimv.Loaders.GeometryLoader = GeometryLoader;","var ShaderLoader = function(basepath)\n{\n  this.base = basepath;\n  this.vertex = new AssetLoader('text');\n  this.fragment = new AssetLoader('text');\n};\n\nShaderLoader.prototype.loadAsset = function(name, asset, callback)\n{\n  var loaded = {}, loading = false;\n  var onload = function() {\n    if(!loading && loaded.fragment && loaded.vertex)\n    {\n      loading = true;\n      callback(null, new ShaderSet(loaded.vertex, loaded.fragment));\n    }\n  };\n  this.vertex.loadAsset(name, this.base+asset.vertex, function(err, v){\n    if(err)\n    {\n      callback(err, null);\n      return;\n    }\n    loaded.vertex = v;\n    onload();\n  });\n  this.fragment.loadAsset(name, this.base+asset.fragment, function(err, v){\n    if(err)\n    {\n      callback(err, null);\n      return;\n    }\n    loaded.fragment = v;\n    onload();\n  });\n};\n\nShaderLoader.prototype.getAsset = function(name)\n{\n  var vertex = this.vertex.getAsset(name),\n    fragment = this.fragment.getAsset(name);\n  if(vertex && fragment)\n  {\n    return new ShaderSet(vertex, fragment);\n  }\n  return null;\n};\n\nimv.Loaders = imv.Loaders || {};\nimv.Loaders.ShaderLoader = ShaderLoader;","var TextureLoader = (function(){\n\n  var typeMap = {\n    'MipMapLinearLinear': THREE.LinearMipMapLinearFilter,\n    'Linear': THREE.LinearFilter,\n    'MipMapLinearNearest': THREE.LinearMipMapNearestFilter,\n    'MipMapNearestLinear': THREE.NearestMipMapLinearFilter,\n    'Nearest': THREE.NearestFilter,\n    'Repeat': THREE.RepeatWrapping,\n    'ClampToEdge': THREE.ClampToEdgeWrapping\n  };\n\n  var typeChange = function(type)\n  {\n    if(typeMap.hasOwnProperty(type))\n    {\n      type = typeMap[type];\n    }\n    else\n    {\n      console.warn('unknown type ' + type);\n    }\n    return type;\n  };\n\n  var textureloader = function(basepath)\n  {\n    this.base = basepath;\n    this.metadata = {};\n    this.textures = new AssetLoader('image', function(i, asset) {\n      var magFilter = typeChange(asset.magFilter);\n      var minFilter = typeChange(asset.minFilter);\n      var wrapS = typeChange(asset.wrapS);\n      var wrapT = typeChange(asset.wrapT);\n      var t = new THREE.Texture(i, undefined, wrapS, wrapT, magFilter, minFilter);\n      t.flipY = false;\n      t.needsUpdate = true;\n      return t;\n    });\n  };\n\n  textureloader.prototype.loadAsset = function(name, asset, callback)\n  {\n    this.textures.loadAsset(name, this.base+asset.path, callback, asset);\n  };\n\n  textureloader.prototype.getAsset = function(name)\n  {\n    return this.textures.getAsset(name);\n  };\n\n  return textureloader;\n}());\n\nimv.Loaders = imv.Loaders || {};\nimv.Loaders.TextureLoader = TextureLoader;","var Entity = (function(){\n\n  var entity = function(loader) {\n    this.loader = loader;\n    this.models = [];\n  };\n  entity._assets = {\n    geometry: [],\n    texture: [],\n    shaders: [],\n    rawShaders: []\n  };\n\n  entity.extend = function(child, parent) {\n    inherits(child, parent);\n    child._assets = {\n      geometry: parent._assets.geometry.slice(),\n      texture: parent._assets.texture.slice(),\n      shaders: parent._assets.shaders.slice(),\n      rawShaders: parent._assets.rawShaders.slice()\n    };\n  };\n  // Add functions for translations, rotations, etc\n  // Anything you'd want to manipulate the entire entity at once.\n  var uniq = function(l, c) {\n    if(l.indexOf(c) < 0) {\n      l.push(c);\n    }\n    return l;\n  };\n  entity.getAssets = function(ent) {\n    return {\n      geometry: ent._assets.geometry.reduce(uniq, []),\n      texture: ent._assets.texture.reduce(uniq, []),\n      shaders: ent._assets.shaders.reduce(uniq, []),\n      rawShaders: ent._assets.rawShaders.reduce(uniq, [])\n    };\n  };\n\n  entity.prototype.setPosition = function(v) {\n    for(var i = 0; i < this.models.length; i++)\n    {\n      this.models[i].mesh.position.copy(v);\n      this.models[i].updateModel();\n    }\n    return this;\n  };\n\n  entity.prototype.setScale = function(v) {\n    for(var i = 0; i < this.models.length; i++)\n    {\n      this.models[i].mesh.scale.copy(v);\n      this.models[i].updateModel();\n    }\n    return this;\n  };\n\n  entity.prototype.setRotation = function(v) {\n    for(var i = 0; i < this.models.length; i++)\n    {\n      this.models[i].mesh.rotation.copy(v);\n      this.models[i].updateModel();\n    }\n    return this;\n  };\n\n  entity.prototype.translate = function(direction, distance) {\n    for(var i = 0; i < this.models.length; i++)\n    {\n      this.models[i].mesh.translateOnAxis(direction, distance);\n      this.models[i].updateModel();\n    }\n    return this;\n  };\n\n  entity.prototype.rotate = function(axis, angle) {\n    for(var i = 0; i < this.models.length; i++)\n    {\n      this.models[i].mesh.rotateOnAxis(axis, angle);\n      this.models[i].updateModel();\n    }\n    return this;\n  };\n\n  return entity;\n}());\n\nimv.Entity = Entity;","var LeveledXMItemEntity = function(mesh, xm_mesh, defaultQuality) {\n\n  var DEFAULT_QUALITY = defaultQuality.clone();\n\n  var ITEM_MESH = mesh,\n    ITEM_TEXTURE = 'FlipCardTexture',\n    ITEM_SHADER = 'bicolor_textured',\n    CORE_MESH = xm_mesh,\n    CORE_TEXTURE = 'ObjectXMTexture',\n    CORE_SHADER = 'xm';\n\n  var leveledItem = function(loader, quality) {\n    Entity.call(this, loader);\n    quality = quality || DEFAULT_QUALITY;\n    var itemGeometry = loader.getAsset('geometry', ITEM_MESH);\n    var itemTexture = loader.getAsset('texture', ITEM_TEXTURE);\n    var itemShaders = loader.getAsset('shaders', ITEM_SHADER);\n    if(!itemGeometry)\n    {\n      throw 'Unable to load Geometry ' + ITEM_MESH;\n    }\n    if(!itemTexture)\n    {\n      throw 'Unable to load texture ' + ITEM_TEXTURE;\n    }\n    if(!itemShaders)\n    {\n      throw 'Unable to load shaders: ' + ITEM_SHADER;\n    }\n    this.item = new BicoloredDrawable(itemTexture, this.quality);\n    this.item.init(itemGeometry, itemShaders);\n    var coreGeometry = loader.getAsset('geometry', CORE_MESH);\n    var coreTexture = loader.getAsset('texture', CORE_TEXTURE);\n    var coreShaders = loader.getAsset('shaders', CORE_SHADER);\n    if(!coreGeometry)\n    {\n      throw 'Unable to load Geometry ' + CORE_MESH;\n    }\n    if(!coreTexture)\n    {\n      throw 'Unable to load texture ' + CORE_TEXTURE;\n    }\n    if(!coreShaders)\n    {\n      throw 'Unable to load shaders: ' + CORE_SHADER;\n    }\n    this.core = new XmDrawable(coreTexture);\n    this.core.init(coreGeometry, coreShaders);\n    this.setQuality(quality);\n    this.models = [this.item, this.core];\n  };\n  Entity.extend(leveledItem, Entity);\n  leveledItem._assets.geometry.push(ITEM_MESH);\n  leveledItem._assets.geometry.push(CORE_MESH);\n  leveledItem._assets.texture.push(ITEM_TEXTURE);\n  leveledItem._assets.texture.push(CORE_TEXTURE);\n  leveledItem._assets.shaders.push(ITEM_SHADER);\n  leveledItem._assets.shaders.push(CORE_SHADER);\n\n  leveledItem.prototype.setQuality = function(quality)\n  {\n    if(quality instanceof THREE.Vector4)\n    {\n      this.quality = quality;\n    }\n    else if(!(quality in constants.qualityColors))\n    {\n      throw 'Unknown quality color ' + quality;\n    }\n    else\n    {\n      this.quality = constants.qualityColors[quality].clone();\n    }\n    if(this.item)\n    {\n      this.item.setPrimaryColor(this.quality);\n    }\n    return this;\n  };\n\n  return leveledItem;\n};\n\nimv.Entities = imv.Entities || {};\nimv.Entities.LeveledXMItem = LeveledXMItemEntity;","var FlipCardXMItemEntity = function(mesh, defaultCoreColor) {\n\n  var DEFAULT_CORE_COLOR = defaultCoreColor.clone();\n\n  var ITEM_MESH = mesh,\n    ITEM_TEXTURE = 'FlipCardTexture',\n    ITEM_SHADER = 'bicolor_textured',\n    CORE_MESH = 'FlipCardXmMesh',\n    CORE_TEXTURE = 'ObjectXMTexture',\n    CORE_SHADER = 'xm';\n\n  var flipcardItem = function(loader, coreColor) {\n    Entity.call(this, loader);\n    coreColor = coreColor || DEFAULT_CORE_COLOR;\n    var itemGeometry = loader.getAsset('geometry', ITEM_MESH);\n    var itemTexture = loader.getAsset('texture', ITEM_TEXTURE);\n    var itemShaders = loader.getAsset('shaders', ITEM_SHADER);\n    if(!itemGeometry)\n    {\n      throw 'Unable to load Geometry ' + ITEM_MESH;\n    }\n    if(!itemTexture)\n    {\n      throw 'Unable to load texture ' + ITEM_TEXTURE;\n    }\n    if(!itemShaders)\n    {\n      throw 'Unable to load shaders: ' + ITEM_SHADER;\n    }\n    this.item = new TexturedDrawable(itemTexture);\n    this.item.init(itemGeometry, itemShaders);\n    var coreGeometry = loader.getAsset('geometry', CORE_MESH);\n    var coreTexture = loader.getAsset('texture', CORE_TEXTURE);\n    var coreShaders = loader.getAsset('shaders', CORE_SHADER);\n    if(!coreGeometry)\n    {\n      throw 'Unable to load Geometry ' + CORE_MESH;\n    }\n    if(!coreTexture)\n    {\n      throw 'Unable to load texture ' + CORE_TEXTURE;\n    }\n    if(!coreShaders)\n    {\n      throw 'Unable to load shaders: ' + CORE_SHADER;\n    }\n    this.core = new XmDrawable(coreTexture);\n    this.core.init(coreGeometry, coreShaders);\n    this.core.setTeamColor(coreColor);\n    this.models = [this.item, this.core];\n  };\n  Entity.extend(flipcardItem, Entity);\n  flipcardItem._assets.geometry.push(ITEM_MESH);\n  flipcardItem._assets.geometry.push(CORE_MESH);\n  flipcardItem._assets.texture.push(ITEM_TEXTURE);\n  flipcardItem._assets.texture.push(CORE_TEXTURE);\n  flipcardItem._assets.shaders.push(ITEM_SHADER);\n  flipcardItem._assets.shaders.push(CORE_SHADER);\n\n  return flipcardItem;\n};\n\nimv.Entities = imv.Entities || {};\nimv.Entities.FlipCardXMItem = FlipCardXMItemEntity;","var r;\n\nimv.Entities = imv.Entities || {};\nimv.Entities.Items = imv.Entities.Items || {};\n// capsule\n// Rare because why not.\nvar CapsuleItemEntity = LeveledXMItemEntity('CapsuleMesh', 'CapsuleXmMesh', constants.qualityColors.RARE);\nimv.Entities.Items.Capsule = CapsuleItemEntity;\n\n// AXA Shield\n// Very Rare since that's the only quality they drop in.\nvar ExtraShieldItemEntity = LeveledXMItemEntity('ExtraShieldMesh', 'ResShieldXMMesh', constants.qualityColors.VERY_RARE);\nimv.Entities.Items.ExtraShield = ExtraShieldItemEntity;\n\n// Force Amp\n// Rare since that's the only quality they drop in.\nvar ForceAmpItemEntity = LeveledXMItemEntity('ForceAmpMesh', 'ForceAmpXmMesh', constants.qualityColors.RARE);\nimv.Entities.Items.ForceAmp = ForceAmpItemEntity;\n\n// Heatsink\n// Very Rare because people like that.\nvar HeatSinkItemEntity = LeveledXMItemEntity('HeatSinkMesh', 'HeatSinkXmMesh', constants.qualityColors.VERY_RARE);\nimv.Entities.Items.HeatSink = HeatSinkItemEntity;\n\n// Link Amp\n// Rare because yeah, right :P\nvar LinkAmpItemEntity = LeveledXMItemEntity('LinkAmpMesh', 'LinkAmpXmMesh', constants.qualityColors.RARE);\nimv.Entities.Items.LinkAmp = LinkAmpItemEntity;\n\n// MultiHack\n// Very Rare because people like that.\nvar MultiHackItemEntity = LeveledXMItemEntity('MultiHackMesh', 'MultiHackXmMesh', constants.qualityColors.VERY_RARE);\nimv.Entities.Items.MultiHack = MultiHackItemEntity;\n\n// Resonator\n// Random level because I can:\nr = Math.floor(Math.random() * 8) + 1;\nvar ResonatorItemEntity = LeveledXMItemEntity('ResonatorMesh', 'ResonatorXMMesh', constants.qualityColors['L' + r]);\nimv.Entities.Items.Resonator = ResonatorItemEntity;\n\n// Shield\n// Very Rare because people like that.\nvar ShieldItemEntity = LeveledXMItemEntity('ResShieldMesh', 'ResShieldXMMesh', constants.qualityColors.VERY_RARE);\nimv.Entities.Items.Shield = ShieldItemEntity;\n\n// Turret\n// Rare because that's the only quality.\nvar TurretItemEntity = LeveledXMItemEntity('TurretMesh', 'TurretXmMesh', constants.qualityColors.RARE);\nimv.Entities.Items.Turret = TurretItemEntity;\n\n// Ultrastrike\n// Random level because I can:\nr = Math.floor(Math.random() * 8) + 1;\nvar UltrastrikeItemEntity = LeveledXMItemEntity('UltrastrikeMesh', 'UltrastrikeXMMesh', constants.qualityColors['L' + r]);\nimv.Entities.Items.Ultrastrike = UltrastrikeItemEntity;\n\n// Xmp\n// Random level because I can:\nr = Math.floor(Math.random() * 8) + 1;\nvar XmpItemEntity = LeveledXMItemEntity('XmpMesh', 'XmpXMMesh', constants.qualityColors['L' + r]);\nimv.Entities.Items.Xmp = XmpItemEntity;\n\n// Jarvis Virus\n// default core color is enlightened team color\nvar JarvisVirusItemEntity = FlipCardXMItemEntity('FlipCardMeshJarvis', constants.teamColors.ENLIGHTENED);\nimv.Entities.Items.JarvisVirus = JarvisVirusItemEntity;\n\n// Ada Refactor\n// default core color is resistance team color\nvar AdaRefactorItemEntity = FlipCardXMItemEntity('FlipCardMeshAda', constants.teamColors.RESISTANCE);\nimv.Entities.Items.AdaRefactor = AdaRefactorItemEntity;\n","var ArtifactEntity = function(series, index, frozen) {\n\n  var MESH = series + (frozen ? 'Frozen' : '') + index,\n    TEXTURE = 'Artifact' + series + 'Texture',\n    SHADER = 'textured',\n    PORTAL_SCALE = 6.0;\n\n  var artifact = function(loader) {\n    Entity.call(this, loader);\n    var geometry = loader.getAsset('geometry', MESH);\n    var texture = loader.getAsset('texture', TEXTURE);\n    var shaders = loader.getAsset('shaders', SHADER);\n    if(!geometry)\n    {\n      throw 'Unable to load Geometry ' + MESH;\n    }\n    if(!texture)\n    {\n      throw 'Unable to load texture ' + TEXTURE;\n    }\n    if(!shaders)\n    {\n      throw 'Unable to load shaders: ' + SHADER;\n    }\n    this.entity = new TexturedDrawable(texture);\n    this.entity.init(geometry, shaders);\n    this.entity.mesh.scale.set(PORTAL_SCALE, PORTAL_SCALE, PORTAL_SCALE);\n    this.entity.updateModel();\n    this.models = [this.entity];\n  };\n  Entity.extend(artifact, Entity);\n  artifact._assets.geometry.push(MESH);\n  artifact._assets.texture.push(TEXTURE);\n  artifact._assets.shaders.push(SHADER);\n\n  return artifact;\n};\n\nimv.Entities = imv.Entities || {};\nimv.Entities.Artifact = ArtifactEntity;\nimv.Entities.Artifacts = imv.Entities.Artifacts || {};\n//Jarvis shards:\nvar i;\nfor(i = 1; i <= 13; i++)\n{\n  imv.Entities.Artifacts['Jarvis' + i] = ArtifactEntity('Jarvis', i, false);\n}\n\nfor(i = 1; i <= 17; i++)\n{\n  imv.Entities.Artifacts['Amar' + i] = ArtifactEntity('Amar', i, false);\n  imv.Entities.Artifacts['AmarFrozen' + i] = ArtifactEntity('Amar', i, true);\n}\n\nfor(i = 1; i <= 40; i++)\n{\n  imv.Entities.Artifacts['Helios' + i] = ArtifactEntity('Helios', i, false);\n  imv.Entities.Artifacts['HeliosFrozen' + i] = ArtifactEntity('Helios', i, true);\n}","var ArtifactGlowEntity = function(series, type, texture, glowColor) {\n\n  var defaultColor = new THREE.Vector4().copy(glowColor);\n\n  var MESH = 'Artifacts' + type + 'Glow',\n    TEXTURE = texture + 'Texture',\n    SHADER = 'portal_scanner',\n    PORTAL_SCALE = 6.0;\n\n  var artifactGlow = function(loader, color) {\n    Entity.call(this, loader);\n    color = color || defaultColor;\n    var geometry = loader.getAsset('geometry', MESH);\n    var texture = loader.getAsset('texture', TEXTURE);\n    var shaders = loader.getAsset('shaders', SHADER);\n    if(!geometry)\n    {\n      throw 'Unable to load Geometry ' + MESH;\n    }\n    if(!texture)\n    {\n      throw 'Unable to load texture ' + TEXTURE;\n    }\n    if(!shaders)\n    {\n      throw 'Unable to load shaders: ' + SHADER;\n    }\n    this.entity = new GlowrampDrawable(texture, color);\n    this.entity.init(geometry, shaders);\n    this.entity.mesh.scale.set(PORTAL_SCALE, PORTAL_SCALE, PORTAL_SCALE);\n    this.entity.updateModel();\n    this.models = [this.entity];\n  };\n  Entity.extend(artifactGlow, Entity);\n  artifactGlow._assets.geometry.push(MESH);\n  artifactGlow._assets.texture.push(TEXTURE);\n  artifactGlow._assets.shaders.push(SHADER);\n\n  return artifactGlow;\n};\n\nimv.Entities = imv.Entities || {};\nimv.Entities.ArtifactGlow = ArtifactGlowEntity;\nimv.Entities.ArtifactGlows = imv.Entities.ArtifactGlows || {};\n(function() {\n  var _series = ['Jarvis', 'Amar', 'Helios'];\n  for(var i = 0; i < _series.length; i++)\n  {\n    imv.Entities.ArtifactGlows[_series[i]] = {\n      Red: ArtifactGlowEntity(_series[i], 'Red', 'ColorGlow', constants.artifactColors[_series[i]].RedGlow),\n      Purple: ArtifactGlowEntity(_series[i], 'Purple', 'ColorGlow', constants.artifactColors[_series[i]].PurpleGlow),\n      Target: ArtifactGlowEntity(_series[i], 'Target', 'TargetGlow', constants.artifactColors[_series[i]].TargetGlow),\n      Green: ArtifactGlowEntity(_series[i], 'Green', 'ColorGlow', constants.teamColors.NEUTRAL),\n    };\n  }\n}());\n","var PortalLinkSystemEntity = (function(){\n\n  var LINK_TEXTURE = 'PortalLinkTexture',\n    LINK_SHADER = 'LinkShader';\n\n  var portalLinkSystem = function(loader) {\n    Entity.call(this, loader);\n    this.linkGeometry = new PortalLinkGeometry();\n    var linkTexture = loader.getAsset('texture', LINK_TEXTURE);\n    var linkShaders = loader.getRawShader(LINK_SHADER);\n    if(!linkTexture)\n    {\n      throw 'Unable to load texture ' + LINK_TEXTURE;\n    }\n    if(!linkShaders)\n    {\n      throw 'Unable to load shaders: ' + LINK_SHADER;\n    }\n    this.linkSystem = new LinkDrawable(linkTexture);\n    this.linkSystem.init(this.linkGeometry, linkShaders);\n    this.models = [this.linkSystem];\n  };\n  Entity.extend(portalLinkSystem, Entity);\n  portalLinkSystem._assets.texture.push(LINK_TEXTURE);\n  portalLinkSystem._assets.rawShaders.push(LINK_SHADER);\n\n  portalLinkSystem.prototype.addLink = function(srcx, srcy, srcPercent,\n    destx, desty, destPercent, color)\n  {\n    if(!(color instanceof THREE.Vector4))\n    {\n      throw 'Color must be a Vector4';\n    }\n    this.linkGeometry.addLink({\n      x: srcx,\n      y: srcy,\n      percent: srcPercent\n    }, {\n      x: destx,\n      y: desty,\n      percent: destPercent\n    }, color);\n    return this;\n  };\n\n  return portalLinkSystem;\n}());\n\nimv.Entities = imv.Entities || {};\nimv.Entities.PortalLinkSystem = PortalLinkSystemEntity;","var ResonatorLinkSystemEntity = (function(){\n\n  var LINK_TEXTURE = 'ResonatorLinkTexture',\n    LINK_SHADER = 'LinkShader';\n\n  var resonatorLinkSystem = function(loader) {\n    Entity.call(this, loader);\n    this.linkGeometry = new ResonatorLinkGeometry();\n    var linkTexture = loader.getAsset('texture', LINK_TEXTURE);\n    var linkShaders = loader.getRawShader(LINK_SHADER);\n    if(!linkTexture)\n    {\n      throw 'Unable to load texture ' + LINK_TEXTURE;\n    }\n    if(!linkShaders)\n    {\n      throw 'Unable to load shaders: ' + LINK_SHADER;\n    }\n    this.linkSystem = new LinkDrawable(linkTexture);\n    this.linkSystem.init(this.linkGeometry, linkShaders);\n    this.models = [this.linkSystem];\n  };\n  Entity.extend(resonatorLinkSystem, Entity);\n  resonatorLinkSystem._assets.texture.push(LINK_TEXTURE);\n  resonatorLinkSystem._assets.rawShaders.push(LINK_SHADER);\n\n  resonatorLinkSystem.prototype.addLink = function(srcx, srcy, srcPercent,\n    destx, desty, destPercent, color)\n  {\n    if(!(color instanceof THREE.Vector4))\n    {\n      throw 'Color must be a Vector4';\n    }\n    this.linkGeometry.addLink({\n      x: srcx,\n      y: srcy,\n      percent: srcPercent\n    }, {\n      x: destx,\n      y: desty,\n      percent: destPercent\n    }, color);\n    return this;\n  };\n\n  return resonatorLinkSystem;\n}());\n\nimv.Entities = imv.Entities || {};\nimv.Entities.ResonatorLinkSystem = ResonatorLinkSystemEntity;","var ShieldEffectEntity = (function(){\n\n  var SHIELD_GEOMETRY = 'PortalShieldMesh',\n    SHIELD_TEXTURE = 'PortalShieldTexture',\n    SHIELD_SHADER = 'shield',\n    SHIELD_SCALE = 12.0;\n\n  var shieldEffect = function(loader, color, options) {\n    Entity.call(this, loader);\n    options = options || {};\n    color = color || constants.teamColors.LOKI.clone();\n    this.setColor(color);\n    var geometry = loader.getAsset('geometry', SHIELD_GEOMETRY);\n    var texture = loader.getAsset('texture', SHIELD_TEXTURE);\n    var shaders = loader.getAsset('shaders', SHIELD_SHADER);\n    if(!geometry)\n    {\n      throw 'Unable to load Geometry ' + SHIELD_GEOMETRY;\n    }\n    if(!texture)\n    {\n      throw 'Unable to load texture ' + SHIELD_TEXTURE;\n    }\n    if(!shaders)\n    {\n      throw 'Unable to load shaders: ' + SHIELD_SHADER;\n    }\n    this.effect = new ShieldEffectDrawable(texture, this.color);\n    this.effect.init(geometry, shaders);\n    this.effect.mesh.scale.set(SHIELD_SCALE, SHIELD_SCALE, SHIELD_SCALE);\n    this.effect.updateModel();\n    this.models = [this.effect];\n  };\n  Entity.extend(shieldEffect, Entity);\n  shieldEffect._assets.geometry.push(SHIELD_GEOMETRY);\n  shieldEffect._assets.texture.push(SHIELD_TEXTURE);\n  shieldEffect._assets.shaders.push(SHIELD_SHADER);\n\n  shieldEffect.prototype.setColor = function(color)\n  {\n    if(!(color instanceof THREE.Vector4))\n    {\n      throw 'Color must be a Vector4';\n    }\n    this.color = color;\n    if(this.effect)\n    {\n      this.effect.setColor(this.color);\n    }\n    return this;\n  };\n\n  return shieldEffect;\n}());\n\nimv.Entities = imv.Entities || {};\nimv.Entities.ShieldEffect = ShieldEffectEntity;","var PortalEntity = (function(){\n\n  var PORTAL_GEOMETRY = 'TexturedPortalMesh',\n    PORTAL_TEXTURE = 'GlowrampTexture',\n    PORTAL_SHADER = 'portal_scanner',\n    PORTAL_SCALE = 6.0;\n\n  var portal = function(loader, teamColor, options) {\n    Entity.call(this, loader);\n    options = options || {};\n    teamColor = teamColor || 'NEUTRAL';\n    this.setTeamColor(teamColor);\n    var portalGeometry = loader.getAsset('geometry', PORTAL_GEOMETRY);\n    var portalTexture = loader.getAsset('texture', PORTAL_TEXTURE);\n    var portalShaders = loader.getAsset('shaders', PORTAL_SHADER);\n    if(!portalGeometry)\n    {\n      throw 'Unable to load Geometry ' + PORTAL_GEOMETRY;\n    }\n    if(!portalTexture)\n    {\n      throw 'Unable to load texture ' + PORTAL_TEXTURE;\n    }\n    if(!portalShaders)\n    {\n      throw 'Unable to load shaders: ' + PORTAL_SHADER;\n    }\n    this.portal = new GlowrampDrawable(portalTexture, this.teamColor);\n    this.portal.init(portalGeometry, portalShaders);\n    this.portal.mesh.scale.set(PORTAL_SCALE, PORTAL_SCALE, PORTAL_SCALE);\n    this.portal.updateModel();\n    this.models = [this.portal];\n  };\n  Entity.extend(portal, Entity);\n  portal._assets.geometry.push(PORTAL_GEOMETRY);\n  portal._assets.texture.push(PORTAL_TEXTURE);\n  portal._assets.shaders.push(PORTAL_SHADER);\n\n  portal.prototype.setTeamColor = function(color)\n  {\n    if(color instanceof THREE.Vector4)\n    {\n      this.teamColor = color;\n    }\n    else if(!(color in constants.teamColors))\n    {\n      throw 'Unknown team color ' + color;\n    }\n    else\n    {\n      this.teamColor = constants.teamColors[color].clone();\n    }\n    if(this.portal)\n    {\n      this.portal.setBaseColor(this.teamColor);\n    }\n    return this;\n  };\n\n  return portal;\n}());\n\nimv.Entities = imv.Entities || {};\nimv.Entities.Portal = PortalEntity;","var ParticlePortalsEntity = (function(){\n\n  var PARTICLE_TEXTURE = 'ParticleTexture',\n    PARTICLE_SHADER = 'particle_portals';\n\n  var particlePortalsEntity = function(loader) {\n    Entity.call(this, loader);\n    this.geometry = new ParticlePortalsGeometry();\n    var texture = loader.getAsset('texture', PARTICLE_TEXTURE);\n    var shaders = loader.getAsset('shaders', PARTICLE_SHADER);\n    this.count = 0;\n    if(!texture)\n    {\n      throw 'Unable to load texture ' + PARTICLE_TEXTURE;\n    }\n    if(!shaders)\n    {\n      throw 'Unable to load shaders: ' + PARTICLE_SHADER;\n    }\n    this.system = new ParticlePortalsDrawable(texture);\n    this.system.init(this.geometry, shaders);\n    this.models = [this.system];\n  };\n  Entity.extend(particlePortalsEntity, Entity);\n  particlePortalsEntity._assets.texture.push(PARTICLE_TEXTURE);\n  particlePortalsEntity._assets.shaders.push(PARTICLE_SHADER);\n\n  particlePortalsEntity.prototype.addSystem = function(color /* v3/v4 */, position /* v3 */,\n    level)\n  {\n    var count = 12 + level * 84.0 / 8.0;\n    var height = 1.35 + 0.65 * level / 8.0;\n    var spread = 7.5 + 12.5 * level / 8.0;\n    var distance = 30.0 + 58.0 * level / 8.0;\n\n    var t_color = new THREE.Vector3(color.x, color.y, color.z);  // discard alpha if present.\n    this.system.addSystem(t_color, position, count, height, spread, distance);\n    this.geometry.addSystem();\n    return this;\n  };\n\n  return particlePortalsEntity;\n}());\n\nimv.Entities = imv.Entities || {};\nimv.Entities.ParticlePortals = ParticlePortalsEntity;","var AssetManager = function(basepath, map) {\n\n  var assetMap = map || {};\n  var cache = {\n    geometry: new GeometryLoader(basepath, IngressGeometry),\n    texture: new TextureLoader(basepath),\n    shaders: new ShaderLoader(basepath)\n  };\n  var keys = Object.keys(cache);\n\n  this.setAssets = function(list)\n  {\n    assetMap = list;\n    return this;\n  };\n\n  this.addAssets = function(list)\n  {\n    assetMap = copyInto(assetMap, list);\n  };\n\n  this.getAsset = function(type, key)\n  {\n    if(type in cache)\n    {\n      return cache[type].getAsset(key);\n    }\n    return null;\n  };\n\n  this.getRawShader = function(name)\n  {\n    if(assetMap && ('rawShaders' in assetMap) && (name in assetMap.rawShaders))\n    {\n      return new ShaderSet(assetMap.rawShaders[name].vertex, assetMap.rawShaders[name].fragment);\n    }\n  };\n\n  this.preloadEntity = function(entity, onComplete)\n  {\n    if (!('_assets' in entity))\n    {\n      throw 'entity must be an instance of Entity';\n    }\n    var done = 0, count = 0, i, key;\n    var a = entity._assets;\n    for(i = 0; i < keys.length; i++)\n    {\n      count += a[keys[i]].length;\n    }\n    var getList = function(type, names) {\n      var complete = function(err) {\n        done++;\n        if(err)\n        {\n          console.warn('Unable to load asset: ' + err);\n        }\n        if(done === count)\n        {\n          onComplete();\n        }\n      };\n      for(var j = 0; j < names.length; j++)\n      {\n        key = names[j];\n        if(!(key in assetMap[type]))\n        {\n          console.warn('Unknown ' + type + ' asset: ' + key);\n          done++;\n        }\n        else\n        {\n          cache[type].loadAsset(key, assetMap[type][key], complete);\n        }\n      }\n    };\n    for(i = 0; i < keys.length; i++)\n    {\n      getList(keys[i], a[keys[i]]);\n    }\n  };\n\n  this.preloadAssets = function(onComplete)\n  {\n    var queues = {};\n    var end = function()\n    {\n      var e = true;\n      for(var i = 0; i < keys.length; i++)\n      {\n        e = e && (queues[keys[i]].i >= queues[keys[i]].n);\n      }\n      if(e)\n      {\n        setTimeout(onComplete, 0);\n      }\n    };\n    var fetch = function(k) {\n      var _keys = Object.keys(assetMap[k]);\n      queues[k] = {\n        i: 0,\n        n: _keys.length\n      };\n      var next = function()\n      {\n        if(queues[k].i >= queues[k].n)\n        {\n          end();\n          return;\n        }\n        var j = queues[k].i++;\n        cache[k].loadAsset(_keys[j], assetMap[k][_keys[j]], function(err){\n          if(err)\n          {\n            console.warn('Unable to load asset: ' + err);\n          }\n          setTimeout(next, 0);\n        });\n      };\n      next();\n    };\n    for(var i = 0; i < keys.length; i++)\n    {\n      fetch(keys[i]);\n    }\n\n    return function () {\n      var k = Object.keys(queues);\n      var l = k.length;\n      var s = 0;\n      for(var i = 0; i < l; i++)\n      {\n        s += (queues[k[i]].i / queues[k[i]].n) / l;\n      }\n      return s;\n    };\n  };\n\n  return this;\n};\n\nimv.AssetManager = AssetManager;","var Engine = function(canvas, options)\n{\n  options = options || {};\n  var params = {\n    cameraOptions: {\n      fov: 75,\n      aspect: 1.0,\n      near: 0.01,\n      far: 50\n    },\n    shaderPrecision: 'mediump',\n    premultipliedAlpha: true,\n    alpha: false,\n    preserveDrawingBuffer: false,\n  };\n  this.options = setParams(params, options, true);\n\n  var created = Date.now();\n  var models = {};\n  var id = 0;\n  this.addDrawable = function(model, soft)\n  {\n    if(!(model instanceof Drawable))\n    {\n      throw 'Object must be of type Drawable';\n    }\n    if(!model.id)\n    {\n      var n = id++;\n      models[n] = model;\n      model.id = n;\n    }\n    else\n    {\n      models[model.id] = model;\n    }\n    model.updateView(this.camera);\n    if(!soft)\n    {\n      this.scene.add(model.mesh);\n    }\n  };\n\n  this.removeDrawable = function(model)\n  {\n    if(!(model instanceof Drawable))\n    {\n      return false;\n    }\n    var i = model.id;\n    if(i in models)\n    {\n      this.scene.remove(models[i].mesh);\n      delete models[i];\n    }\n    return true;\n  };\n\n  this.addEntity = function(entity, soft)\n  {\n    if(!(entity instanceof Entity))\n    {\n      throw 'Must pass an instance of IMV.Entity';\n    }\n    for(var i = 0; i < entity.models.length; i++)\n    {\n      this.addDrawable(entity.models[i], soft);\n    }\n  };\n\n  this.removeEntity = function(entity)\n  {\n    if(!(entity instanceof Entity))\n    {\n      return false;\n    }\n    var t = true;\n    for(var i = 0; i < entity.models.length; i++)\n    {\n      t = this.removeDrawable(entity.models[i]) && t;\n    }\n    return t;\n  };\n\n  this.hideModel = function(model)\n  {\n    var i = model.id;\n    if(i in models)\n    {\n      this.scene.remove(models[i].mesh);\n    }\n    return this;\n  };\n\n  this.showModel = function(model)\n  {\n    var i = model.id;\n    if(i in models)\n    {\n      this.scene.add(models[i].mesh);\n    }\n    return this;\n  };\n\n  this.clearScene = function()\n  {\n    var keys = Object.keys(models);\n    for(var i = 0; i < keys.length; i++)\n    {\n      this.scene.remove(models[keys[i]].mesh);\n      delete models[keys[i]];\n    }\n    return this;\n  };\n\n  this.scene = new THREE.Scene();\n  this.camera = new THREE.PerspectiveCamera(\n    this.options.cameraOptions.fov,\n    this.options.cameraOptions.aspect,\n    this.options.cameraOptions.near,\n    this.options.cameraOptions.far\n  );\n  this.renderer = new THREE.WebGLRenderer({\n    canvas: canvas,\n    precision: this.options.shaderPrecision,\n    premultipliedAlpha: this.options.premultipliedAlpha,\n    alpha: this.options.alpha,\n    preserveDrawingBuffer: this.options.preserveDrawingBuffer,\n    antialias: true\n  });\n  //this.renderer.sortObjects = false;\n\n  var _this = this;\n  var _periodics = [];\n  this.getElapsed = function() { return Date.now() - created; };\n\n  this.registerPeriodic = function(fn)\n  {\n    _periodics.push(fn);\n    return this;\n  };\n\n  this.unregisterPeriodic = function(fn)\n  {\n    for(var i = 0; i < _periodics.length; i++)\n    {\n      if(_periodics[i] === fn)\n      {\n        _periodics.splice(i, 1);\n      }\n    }\n    return this;\n  };\n\n  var lastTick = created;\n  var updatePeriodics = function()\n  {\n    var i;\n    var n = Date.now(), d = n - lastTick;\n    lastTick = n;\n    for(i in models)\n    {\n      if(models.hasOwnProperty(i) && models[i] instanceof Drawable)\n      {\n        models[i].updateTime(d);\n      }\n    }\n    var l = _periodics.length;\n    for(i = 0; i < l; i++)\n    {\n      _periodics[i](d);\n    }\n  };\n\n  var updateViewUniforms = function(camera)\n  {\n    var i;\n    for(i in models)\n    {\n      if(models.hasOwnProperty(i))\n      {\n        if(models[i] instanceof Drawable)\n        {\n          models[i].updateView(camera);\n        }\n      }\n    }\n  };\n\n  var _ovr = false;\n  var _effect = null;\n  this.enableOVR = function() {\n    if(!_effect)\n    {\n      _effect = new THREE.OculusRiftEffect(this.renderer);\n      _effect.preLeftRender = updateViewUniforms;\n      _effect.preRightRender = updateViewUniforms;\n    }\n    _ovr = true;\n  };\n\n  var width, height;\n  var updateViewport = function()\n  {\n    _this.camera.aspect = width / height;\n    _this.camera.updateProjectionMatrix();\n    updateViewUniforms(_this.camera);\n    _this.renderer.setSize(width, height);\n    if(_effect)\n    {\n      _effect.setSize(width, height);\n    }\n  };\n\n  this.updateViewport = function(w, h)\n  {\n    width = w;\n    height = h;\n    updateViewport();\n  };\n\n  this.disableOVR = function() {\n    _ovr = false;\n    updateViewport();\n  };\n\n  var suspended = false;\n  var cleared = false;\n  var render = function() {\n    if(suspended)\n    {\n        cleared = true;\n        return;\n    }\n    // update the default worldview.\n    window.requestAnimationFrame(render);\n    updatePeriodics();\n    if(_ovr)\n    {\n      _effect.render(_this.scene, _this.camera);\n    }\n    else\n    {\n      if(_this.camera.matrixWorldNeedsUpdate)\n      {\n        updateViewUniforms(_this.camera);\n      }\n      _this.renderer.render(_this.scene, _this.camera);\n    }\n  };\n\n  this.suspend = function()\n  {\n    if(!suspended)\n    {\n      suspended = true;\n      cleared = false;\n    }\n  };\n\n  this.resume = function()\n  {\n    suspended = false;\n    if(cleared)\n    {\n      cleared = false;\n      lastTick = Date.now();\n      render();\n    }\n  };\n\n  render();\n\n  return this;\n};\n\nimv.Engine = Engine;","  imv.VERSION = '0.12.0';\n\n  root.IMV = imv;\n\n}(this));\n"]}